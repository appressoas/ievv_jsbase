{
  "type": "Program",
  "body": [
    {
      "type": "ImportDeclaration",
      "specifiers": [
        {
          "type": "ImportSpecifier",
          "local": {
            "type": "Identifier",
            "name": "ImmutableMap",
            "range": [
              16,
              28
            ],
            "loc": {
              "start": {
                "line": 1,
                "column": 16
              },
              "end": {
                "line": 1,
                "column": 28
              }
            }
          },
          "imported": {
            "type": "Identifier",
            "name": "Map",
            "range": [
              9,
              12
            ],
            "loc": {
              "start": {
                "line": 1,
                "column": 9
              },
              "end": {
                "line": 1,
                "column": 12
              }
            }
          },
          "range": [
            9,
            28
          ],
          "loc": {
            "start": {
              "line": 1,
              "column": 9
            },
            "end": {
              "line": 1,
              "column": 28
            }
          }
        },
        {
          "type": "ImportSpecifier",
          "local": {
            "type": "Identifier",
            "name": "ImmutableOrderedMap",
            "range": [
              44,
              63
            ],
            "loc": {
              "start": {
                "line": 1,
                "column": 44
              },
              "end": {
                "line": 1,
                "column": 63
              }
            }
          },
          "imported": {
            "type": "Identifier",
            "name": "OrderedMap",
            "range": [
              30,
              40
            ],
            "loc": {
              "start": {
                "line": 1,
                "column": 30
              },
              "end": {
                "line": 1,
                "column": 40
              }
            }
          },
          "range": [
            30,
            63
          ],
          "loc": {
            "start": {
              "line": 1,
              "column": 30
            },
            "end": {
              "line": 1,
              "column": 63
            }
          }
        },
        {
          "type": "ImportSpecifier",
          "local": {
            "type": "Identifier",
            "name": "ImmutableList",
            "range": [
              73,
              86
            ],
            "loc": {
              "start": {
                "line": 1,
                "column": 73
              },
              "end": {
                "line": 1,
                "column": 86
              }
            }
          },
          "imported": {
            "type": "Identifier",
            "name": "List",
            "range": [
              65,
              69
            ],
            "loc": {
              "start": {
                "line": 1,
                "column": 65
              },
              "end": {
                "line": 1,
                "column": 69
              }
            }
          },
          "range": [
            65,
            86
          ],
          "loc": {
            "start": {
              "line": 1,
              "column": 65
            },
            "end": {
              "line": 1,
              "column": 86
            }
          }
        }
      ],
      "source": {
        "type": "Literal",
        "value": "immutable",
        "raw": "'immutable'",
        "range": [
          94,
          105
        ],
        "loc": {
          "start": {
            "line": 1,
            "column": 94
          },
          "end": {
            "line": 1,
            "column": 105
          }
        }
      },
      "range": [
        0,
        106
      ],
      "loc": {
        "start": {
          "line": 1,
          "column": 0
        },
        "end": {
          "line": 2,
          "column": 0
        }
      }
    },
    {
      "type": "ImportDeclaration",
      "specifiers": [
        {
          "type": "ImportDefaultSpecifier",
          "local": {
            "type": "Identifier",
            "name": "LoggerSingleton",
            "range": [
              113,
              128
            ],
            "loc": {
              "start": {
                "line": 2,
                "column": 7
              },
              "end": {
                "line": 2,
                "column": 22
              }
            }
          },
          "range": [
            113,
            128
          ],
          "loc": {
            "start": {
              "line": 2,
              "column": 7
            },
            "end": {
              "line": 2,
              "column": 22
            }
          }
        }
      ],
      "source": {
        "type": "Literal",
        "value": "ievv_jsbase/lib/log/LoggerSingleton",
        "raw": "'ievv_jsbase/lib/log/LoggerSingleton'",
        "range": [
          134,
          171
        ],
        "loc": {
          "start": {
            "line": 2,
            "column": 28
          },
          "end": {
            "line": 2,
            "column": 65
          }
        }
      },
      "range": [
        106,
        173
      ],
      "loc": {
        "start": {
          "line": 2,
          "column": 0
        },
        "end": {
          "line": 4,
          "column": 0
        }
      }
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "logger",
            "range": [
              179,
              185
            ],
            "loc": {
              "start": {
                "line": 4,
                "column": 6
              },
              "end": {
                "line": 4,
                "column": 12
              }
            }
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "computed": false,
              "object": {
                "type": "NewExpression",
                "callee": {
                  "type": "Identifier",
                  "name": "LoggerSingleton",
                  "range": [
                    192,
                    207
                  ],
                  "loc": {
                    "start": {
                      "line": 4,
                      "column": 19
                    },
                    "end": {
                      "line": 4,
                      "column": 34
                    }
                  }
                },
                "arguments": [],
                "range": [
                  188,
                  209
                ],
                "loc": {
                  "start": {
                    "line": 4,
                    "column": 15
                  },
                  "end": {
                    "line": 4,
                    "column": 36
                  }
                }
              },
              "property": {
                "type": "Identifier",
                "name": "getLogger",
                "range": [
                  210,
                  219
                ],
                "loc": {
                  "start": {
                    "line": 4,
                    "column": 37
                  },
                  "end": {
                    "line": 4,
                    "column": 46
                  }
                }
              },
              "range": [
                188,
                219
              ],
              "loc": {
                "start": {
                  "line": 4,
                  "column": 15
                },
                "end": {
                  "line": 4,
                  "column": 46
                }
              }
            },
            "arguments": [
              {
                "type": "Literal",
                "value": "churchill_js.utilities.reduxApiUtilities",
                "raw": "'churchill_js.utilities.reduxApiUtilities'",
                "range": [
                  220,
                  262
                ],
                "loc": {
                  "start": {
                    "line": 4,
                    "column": 47
                  },
                  "end": {
                    "line": 4,
                    "column": 89
                  }
                }
              }
            ],
            "range": [
              188,
              263
            ],
            "loc": {
              "start": {
                "line": 4,
                "column": 15
              },
              "end": {
                "line": 4,
                "column": 90
              }
            }
          },
          "range": [
            179,
            263
          ],
          "loc": {
            "start": {
              "line": 4,
              "column": 6
            },
            "end": {
              "line": 4,
              "column": 90
            }
          },
          "trailingComments": [
            {
              "type": "Block",
              "value": "*\n * Util used by all `action.js`-files in `redux/api/*`.\n * This is used to mark an entry in a redux-map as loading.\n *\n * sets `isLoading` to `true` and `apiError` to null.\n *\n * @param oldApiDataMap Previous contents of `data` in the redux-map in question\n * @return {Immutable.Map<string, any>} The new Map to insert as entry in the redux-map being updated.\n ",
              "range": [
                265,
                632
              ],
              "loc": {
                "start": {
                  "line": 6,
                  "column": 0
                },
                "end": {
                  "line": 14,
                  "column": 3
                }
              }
            }
          ]
        }
      ],
      "kind": "const",
      "range": [
        173,
        633
      ],
      "loc": {
        "start": {
          "line": 4,
          "column": 0
        },
        "end": {
          "line": 15,
          "column": 0
        }
      }
    },
    {
      "type": "ExportNamedDeclaration",
      "declaration": {
        "type": "FunctionDeclaration",
        "id": {
          "type": "Identifier",
          "name": "makeApiDataMapIsLoading",
          "range": [
            649,
            672
          ],
          "loc": {
            "start": {
              "line": 15,
              "column": 16
            },
            "end": {
              "line": 15,
              "column": 39
            }
          }
        },
        "params": [
          {
            "type": "AssignmentPattern",
            "left": {
              "type": "Identifier",
              "name": "oldApiDataMap",
              "range": [
                674,
                687
              ],
              "loc": {
                "start": {
                  "line": 15,
                  "column": 41
                },
                "end": {
                  "line": 15,
                  "column": 54
                }
              }
            },
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "null",
              "range": [
                690,
                694
              ],
              "loc": {
                "start": {
                  "line": 15,
                  "column": 57
                },
                "end": {
                  "line": 15,
                  "column": 61
                }
              }
            },
            "range": [
              674,
              694
            ],
            "loc": {
              "start": {
                "line": 15,
                "column": 41
              },
              "end": {
                "line": 15,
                "column": 61
              }
            }
          }
        ],
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "ReturnStatement",
              "argument": {
                "type": "NewExpression",
                "callee": {
                  "type": "Identifier",
                  "name": "ImmutableMap",
                  "range": [
                    711,
                    723
                  ],
                  "loc": {
                    "start": {
                      "line": 16,
                      "column": 13
                    },
                    "end": {
                      "line": 16,
                      "column": 25
                    }
                  }
                },
                "arguments": [
                  {
                    "type": "ObjectExpression",
                    "properties": [
                      {
                        "type": "Property",
                        "key": {
                          "type": "Identifier",
                          "name": "isLoading",
                          "range": [
                            730,
                            739
                          ],
                          "loc": {
                            "start": {
                              "line": 17,
                              "column": 4
                            },
                            "end": {
                              "line": 17,
                              "column": 13
                            }
                          }
                        },
                        "value": {
                          "type": "Literal",
                          "value": true,
                          "raw": "true",
                          "range": [
                            741,
                            745
                          ],
                          "loc": {
                            "start": {
                              "line": 17,
                              "column": 15
                            },
                            "end": {
                              "line": 17,
                              "column": 19
                            }
                          }
                        },
                        "kind": "init",
                        "method": false,
                        "shorthand": false,
                        "computed": false,
                        "range": [
                          730,
                          745
                        ],
                        "loc": {
                          "start": {
                            "line": 17,
                            "column": 4
                          },
                          "end": {
                            "line": 17,
                            "column": 19
                          }
                        }
                      },
                      {
                        "type": "Property",
                        "key": {
                          "type": "Identifier",
                          "name": "isDeleted",
                          "range": [
                            751,
                            760
                          ],
                          "loc": {
                            "start": {
                              "line": 18,
                              "column": 4
                            },
                            "end": {
                              "line": 18,
                              "column": 13
                            }
                          }
                        },
                        "value": {
                          "type": "Literal",
                          "value": false,
                          "raw": "false",
                          "range": [
                            762,
                            767
                          ],
                          "loc": {
                            "start": {
                              "line": 18,
                              "column": 15
                            },
                            "end": {
                              "line": 18,
                              "column": 20
                            }
                          }
                        },
                        "kind": "init",
                        "method": false,
                        "shorthand": false,
                        "computed": false,
                        "range": [
                          751,
                          767
                        ],
                        "loc": {
                          "start": {
                            "line": 18,
                            "column": 4
                          },
                          "end": {
                            "line": 18,
                            "column": 20
                          }
                        }
                      },
                      {
                        "type": "Property",
                        "key": {
                          "type": "Identifier",
                          "name": "apiError",
                          "range": [
                            773,
                            781
                          ],
                          "loc": {
                            "start": {
                              "line": 19,
                              "column": 4
                            },
                            "end": {
                              "line": 19,
                              "column": 12
                            }
                          }
                        },
                        "value": {
                          "type": "Literal",
                          "value": null,
                          "raw": "null",
                          "range": [
                            783,
                            787
                          ],
                          "loc": {
                            "start": {
                              "line": 19,
                              "column": 14
                            },
                            "end": {
                              "line": 19,
                              "column": 18
                            }
                          }
                        },
                        "kind": "init",
                        "method": false,
                        "shorthand": false,
                        "computed": false,
                        "range": [
                          773,
                          787
                        ],
                        "loc": {
                          "start": {
                            "line": 19,
                            "column": 4
                          },
                          "end": {
                            "line": 19,
                            "column": 18
                          }
                        }
                      },
                      {
                        "type": "Property",
                        "key": {
                          "type": "Identifier",
                          "name": "data",
                          "range": [
                            793,
                            797
                          ],
                          "loc": {
                            "start": {
                              "line": 20,
                              "column": 4
                            },
                            "end": {
                              "line": 20,
                              "column": 8
                            }
                          }
                        },
                        "value": {
                          "type": "ConditionalExpression",
                          "test": {
                            "type": "BinaryExpression",
                            "operator": "===",
                            "left": {
                              "type": "Identifier",
                              "name": "oldApiDataMap",
                              "range": [
                                799,
                                812
                              ],
                              "loc": {
                                "start": {
                                  "line": 20,
                                  "column": 10
                                },
                                "end": {
                                  "line": 20,
                                  "column": 23
                                }
                              }
                            },
                            "right": {
                              "type": "Literal",
                              "value": null,
                              "raw": "null",
                              "range": [
                                817,
                                821
                              ],
                              "loc": {
                                "start": {
                                  "line": 20,
                                  "column": 28
                                },
                                "end": {
                                  "line": 20,
                                  "column": 32
                                }
                              }
                            },
                            "range": [
                              799,
                              821
                            ],
                            "loc": {
                              "start": {
                                "line": 20,
                                "column": 10
                              },
                              "end": {
                                "line": 20,
                                "column": 32
                              }
                            }
                          },
                          "consequent": {
                            "type": "NewExpression",
                            "callee": {
                              "type": "Identifier",
                              "name": "ImmutableMap",
                              "range": [
                                828,
                                840
                              ],
                              "loc": {
                                "start": {
                                  "line": 20,
                                  "column": 39
                                },
                                "end": {
                                  "line": 20,
                                  "column": 51
                                }
                              }
                            },
                            "arguments": [],
                            "range": [
                              824,
                              842
                            ],
                            "loc": {
                              "start": {
                                "line": 20,
                                "column": 35
                              },
                              "end": {
                                "line": 20,
                                "column": 53
                              }
                            }
                          },
                          "alternate": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "oldApiDataMap",
                                "range": [
                                  845,
                                  858
                                ],
                                "loc": {
                                  "start": {
                                    "line": 20,
                                    "column": 56
                                  },
                                  "end": {
                                    "line": 20,
                                    "column": 69
                                  }
                                }
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "get",
                                "range": [
                                  859,
                                  862
                                ],
                                "loc": {
                                  "start": {
                                    "line": 20,
                                    "column": 70
                                  },
                                  "end": {
                                    "line": 20,
                                    "column": 73
                                  }
                                }
                              },
                              "range": [
                                845,
                                862
                              ],
                              "loc": {
                                "start": {
                                  "line": 20,
                                  "column": 56
                                },
                                "end": {
                                  "line": 20,
                                  "column": 73
                                }
                              }
                            },
                            "arguments": [
                              {
                                "type": "Literal",
                                "value": "data",
                                "raw": "'data'",
                                "range": [
                                  863,
                                  869
                                ],
                                "loc": {
                                  "start": {
                                    "line": 20,
                                    "column": 74
                                  },
                                  "end": {
                                    "line": 20,
                                    "column": 80
                                  }
                                }
                              }
                            ],
                            "range": [
                              845,
                              870
                            ],
                            "loc": {
                              "start": {
                                "line": 20,
                                "column": 56
                              },
                              "end": {
                                "line": 20,
                                "column": 81
                              }
                            }
                          },
                          "range": [
                            799,
                            870
                          ],
                          "loc": {
                            "start": {
                              "line": 20,
                              "column": 10
                            },
                            "end": {
                              "line": 20,
                              "column": 81
                            }
                          }
                        },
                        "kind": "init",
                        "method": false,
                        "shorthand": false,
                        "computed": false,
                        "range": [
                          793,
                          870
                        ],
                        "loc": {
                          "start": {
                            "line": 20,
                            "column": 4
                          },
                          "end": {
                            "line": 20,
                            "column": 81
                          }
                        }
                      }
                    ],
                    "range": [
                      724,
                      874
                    ],
                    "loc": {
                      "start": {
                        "line": 16,
                        "column": 26
                      },
                      "end": {
                        "line": 21,
                        "column": 3
                      }
                    }
                  }
                ],
                "range": [
                  707,
                  875
                ],
                "loc": {
                  "start": {
                    "line": 16,
                    "column": 9
                  },
                  "end": {
                    "line": 21,
                    "column": 4
                  }
                }
              },
              "range": [
                700,
                876
              ],
              "loc": {
                "start": {
                  "line": 16,
                  "column": 2
                },
                "end": {
                  "line": 22,
                  "column": 0
                }
              }
            }
          ],
          "range": [
            696,
            877
          ],
          "loc": {
            "start": {
              "line": 15,
              "column": 63
            },
            "end": {
              "line": 22,
              "column": 1
            }
          }
        },
        "generator": false,
        "expression": false,
        "range": [
          640,
          877
        ],
        "loc": {
          "start": {
            "line": 15,
            "column": 7
          },
          "end": {
            "line": 22,
            "column": 1
          }
        },
        "leadingComments": [
          {
            "type": "Block",
            "value": "*\n * Util used by all `action.js`-files in `redux/api/*`.\n * This is used to mark an entry in a redux-map as loading.\n *\n * sets `isLoading` to `true` and `apiError` to null.\n *\n * @param oldApiDataMap Previous contents of `data` in the redux-map in question\n * @return {Immutable.Map<string, any>} The new Map to insert as entry in the redux-map being updated.\n ",
            "range": [
              265,
              632
            ],
            "loc": {
              "start": {
                "line": 6,
                "column": 0
              },
              "end": {
                "line": 14,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "Block",
            "value": "*\n * Util used by all `action.js`-files in `redux/api/*`.\n * This is used to format data to store in redux-state-map when an api-call is successful.\n *\n * The given `newData` is inserted as an ImmutableMap `data`.\n *\n * sets `isLoading` to `false`, `apiError` to null and `timestamp` to now.\n *\n * @param newData {Object} the object returned from the api which should be formated for insertion in the\n *   redux-state-map. If fromList is true this should be an iterable.\n * @param fromList {boolean} if true, make an ImmutableList of the given data instead of ImmutableMap\n * @param noWrap {boolean} if true, newData will not be wrapped in ImmutableMap or ImmutableList. Only use this if the\n *   data you are setting is already an ImmutableMap or ImmutableList!\n * @return {Immutable.Map} newly formatted ImmutableMap ready to be placed in redux-state-map\n ",
            "range": [
              879,
              1741
            ],
            "loc": {
              "start": {
                "line": 24,
                "column": 0
              },
              "end": {
                "line": 38,
                "column": 3
              }
            }
          }
        ]
      },
      "specifiers": [],
      "source": null,
      "range": [
        633,
        877
      ],
      "loc": {
        "start": {
          "line": 15,
          "column": 0
        },
        "end": {
          "line": 22,
          "column": 1
        }
      },
      "leadingComments": [
        {
          "type": "Block",
          "value": "*\n * Util used by all `action.js`-files in `redux/api/*`.\n * This is used to mark an entry in a redux-map as loading.\n *\n * sets `isLoading` to `true` and `apiError` to null.\n *\n * @param oldApiDataMap Previous contents of `data` in the redux-map in question\n * @return {Immutable.Map<string, any>} The new Map to insert as entry in the redux-map being updated.\n ",
          "range": [
            265,
            632
          ],
          "loc": {
            "start": {
              "line": 6,
              "column": 0
            },
            "end": {
              "line": 14,
              "column": 3
            }
          }
        }
      ],
      "trailingComments": [
        {
          "type": "Block",
          "value": "*\n * Util used by all `action.js`-files in `redux/api/*`.\n * This is used to format data to store in redux-state-map when an api-call is successful.\n *\n * The given `newData` is inserted as an ImmutableMap `data`.\n *\n * sets `isLoading` to `false`, `apiError` to null and `timestamp` to now.\n *\n * @param newData {Object} the object returned from the api which should be formated for insertion in the\n *   redux-state-map. If fromList is true this should be an iterable.\n * @param fromList {boolean} if true, make an ImmutableList of the given data instead of ImmutableMap\n * @param noWrap {boolean} if true, newData will not be wrapped in ImmutableMap or ImmutableList. Only use this if the\n *   data you are setting is already an ImmutableMap or ImmutableList!\n * @return {Immutable.Map} newly formatted ImmutableMap ready to be placed in redux-state-map\n ",
          "range": [
            879,
            1741
          ],
          "loc": {
            "start": {
              "line": 24,
              "column": 0
            },
            "end": {
              "line": 38,
              "column": 3
            }
          }
        }
      ]
    },
    {
      "type": "ExportNamedDeclaration",
      "declaration": {
        "type": "FunctionDeclaration",
        "id": {
          "type": "Identifier",
          "name": "makeApiDataMapNewData",
          "range": [
            1758,
            1779
          ],
          "loc": {
            "start": {
              "line": 39,
              "column": 16
            },
            "end": {
              "line": 39,
              "column": 37
            }
          }
        },
        "params": [
          {
            "type": "Identifier",
            "name": "newData",
            "range": [
              1781,
              1788
            ],
            "loc": {
              "start": {
                "line": 39,
                "column": 39
              },
              "end": {
                "line": 39,
                "column": 46
              }
            }
          },
          {
            "type": "AssignmentPattern",
            "left": {
              "type": "Identifier",
              "name": "fromList",
              "range": [
                1790,
                1798
              ],
              "loc": {
                "start": {
                  "line": 39,
                  "column": 48
                },
                "end": {
                  "line": 39,
                  "column": 56
                }
              }
            },
            "right": {
              "type": "Literal",
              "value": false,
              "raw": "false",
              "range": [
                1801,
                1806
              ],
              "loc": {
                "start": {
                  "line": 39,
                  "column": 59
                },
                "end": {
                  "line": 39,
                  "column": 64
                }
              }
            },
            "range": [
              1790,
              1806
            ],
            "loc": {
              "start": {
                "line": 39,
                "column": 48
              },
              "end": {
                "line": 39,
                "column": 64
              }
            }
          },
          {
            "type": "AssignmentPattern",
            "left": {
              "type": "Identifier",
              "name": "noWrap",
              "range": [
                1808,
                1814
              ],
              "loc": {
                "start": {
                  "line": 39,
                  "column": 66
                },
                "end": {
                  "line": 39,
                  "column": 72
                }
              }
            },
            "right": {
              "type": "Literal",
              "value": false,
              "raw": "false",
              "range": [
                1817,
                1822
              ],
              "loc": {
                "start": {
                  "line": 39,
                  "column": 75
                },
                "end": {
                  "line": 39,
                  "column": 80
                }
              }
            },
            "range": [
              1808,
              1822
            ],
            "loc": {
              "start": {
                "line": 39,
                "column": 66
              },
              "end": {
                "line": 39,
                "column": 80
              }
            }
          }
        ],
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "VariableDeclaration",
              "declarations": [
                {
                  "type": "VariableDeclarator",
                  "id": {
                    "type": "Identifier",
                    "name": "getData",
                    "range": [
                      1834,
                      1841
                    ],
                    "loc": {
                      "start": {
                        "line": 40,
                        "column": 8
                      },
                      "end": {
                        "line": 40,
                        "column": 15
                      }
                    }
                  },
                  "init": {
                    "type": "ArrowFunctionExpression",
                    "id": null,
                    "params": [],
                    "body": {
                      "type": "BlockStatement",
                      "body": [
                        {
                          "type": "IfStatement",
                          "test": {
                            "type": "Identifier",
                            "name": "noWrap",
                            "range": [
                              1860,
                              1866
                            ],
                            "loc": {
                              "start": {
                                "line": 41,
                                "column": 8
                              },
                              "end": {
                                "line": 41,
                                "column": 14
                              }
                            }
                          },
                          "consequent": {
                            "type": "BlockStatement",
                            "body": [
                              {
                                "type": "ReturnStatement",
                                "argument": {
                                  "type": "Identifier",
                                  "name": "newData",
                                  "range": [
                                    1883,
                                    1890
                                  ],
                                  "loc": {
                                    "start": {
                                      "line": 42,
                                      "column": 13
                                    },
                                    "end": {
                                      "line": 42,
                                      "column": 20
                                    }
                                  }
                                },
                                "range": [
                                  1876,
                                  1895
                                ],
                                "loc": {
                                  "start": {
                                    "line": 42,
                                    "column": 6
                                  },
                                  "end": {
                                    "line": 43,
                                    "column": 4
                                  }
                                }
                              }
                            ],
                            "range": [
                              1868,
                              1896
                            ],
                            "loc": {
                              "start": {
                                "line": 41,
                                "column": 16
                              },
                              "end": {
                                "line": 43,
                                "column": 5
                              }
                            }
                          },
                          "alternate": null,
                          "range": [
                            1856,
                            1896
                          ],
                          "loc": {
                            "start": {
                              "line": 41,
                              "column": 4
                            },
                            "end": {
                              "line": 43,
                              "column": 5
                            }
                          }
                        },
                        {
                          "type": "IfStatement",
                          "test": {
                            "type": "Identifier",
                            "name": "fromList",
                            "range": [
                              1905,
                              1913
                            ],
                            "loc": {
                              "start": {
                                "line": 44,
                                "column": 8
                              },
                              "end": {
                                "line": 44,
                                "column": 16
                              }
                            }
                          },
                          "consequent": {
                            "type": "BlockStatement",
                            "body": [
                              {
                                "type": "ReturnStatement",
                                "argument": {
                                  "type": "NewExpression",
                                  "callee": {
                                    "type": "Identifier",
                                    "name": "ImmutableList",
                                    "range": [
                                      1934,
                                      1947
                                    ],
                                    "loc": {
                                      "start": {
                                        "line": 45,
                                        "column": 17
                                      },
                                      "end": {
                                        "line": 45,
                                        "column": 30
                                      }
                                    }
                                  },
                                  "arguments": [
                                    {
                                      "type": "Identifier",
                                      "name": "newData",
                                      "range": [
                                        1948,
                                        1955
                                      ],
                                      "loc": {
                                        "start": {
                                          "line": 45,
                                          "column": 31
                                        },
                                        "end": {
                                          "line": 45,
                                          "column": 38
                                        }
                                      }
                                    }
                                  ],
                                  "range": [
                                    1930,
                                    1956
                                  ],
                                  "loc": {
                                    "start": {
                                      "line": 45,
                                      "column": 13
                                    },
                                    "end": {
                                      "line": 45,
                                      "column": 39
                                    }
                                  }
                                },
                                "range": [
                                  1923,
                                  1961
                                ],
                                "loc": {
                                  "start": {
                                    "line": 45,
                                    "column": 6
                                  },
                                  "end": {
                                    "line": 46,
                                    "column": 4
                                  }
                                }
                              }
                            ],
                            "range": [
                              1915,
                              1962
                            ],
                            "loc": {
                              "start": {
                                "line": 44,
                                "column": 18
                              },
                              "end": {
                                "line": 46,
                                "column": 5
                              }
                            }
                          },
                          "alternate": null,
                          "range": [
                            1901,
                            1962
                          ],
                          "loc": {
                            "start": {
                              "line": 44,
                              "column": 4
                            },
                            "end": {
                              "line": 46,
                              "column": 5
                            }
                          }
                        },
                        {
                          "type": "ReturnStatement",
                          "argument": {
                            "type": "NewExpression",
                            "callee": {
                              "type": "Identifier",
                              "name": "ImmutableMap",
                              "range": [
                                1978,
                                1990
                              ],
                              "loc": {
                                "start": {
                                  "line": 47,
                                  "column": 15
                                },
                                "end": {
                                  "line": 47,
                                  "column": 27
                                }
                              }
                            },
                            "arguments": [
                              {
                                "type": "Identifier",
                                "name": "newData",
                                "range": [
                                  1991,
                                  1998
                                ],
                                "loc": {
                                  "start": {
                                    "line": 47,
                                    "column": 28
                                  },
                                  "end": {
                                    "line": 47,
                                    "column": 35
                                  }
                                }
                              }
                            ],
                            "range": [
                              1974,
                              1999
                            ],
                            "loc": {
                              "start": {
                                "line": 47,
                                "column": 11
                              },
                              "end": {
                                "line": 47,
                                "column": 36
                              }
                            }
                          },
                          "range": [
                            1967,
                            2002
                          ],
                          "loc": {
                            "start": {
                              "line": 47,
                              "column": 4
                            },
                            "end": {
                              "line": 48,
                              "column": 2
                            }
                          }
                        }
                      ],
                      "range": [
                        1850,
                        2003
                      ],
                      "loc": {
                        "start": {
                          "line": 40,
                          "column": 24
                        },
                        "end": {
                          "line": 48,
                          "column": 3
                        }
                      }
                    },
                    "generator": false,
                    "expression": false,
                    "range": [
                      1844,
                      2003
                    ],
                    "loc": {
                      "start": {
                        "line": 40,
                        "column": 18
                      },
                      "end": {
                        "line": 48,
                        "column": 3
                      }
                    }
                  },
                  "range": [
                    1834,
                    2003
                  ],
                  "loc": {
                    "start": {
                      "line": 40,
                      "column": 8
                    },
                    "end": {
                      "line": 48,
                      "column": 3
                    }
                  }
                }
              ],
              "kind": "const",
              "range": [
                1828,
                2007
              ],
              "loc": {
                "start": {
                  "line": 40,
                  "column": 2
                },
                "end": {
                  "line": 50,
                  "column": 2
                }
              }
            },
            {
              "type": "ReturnStatement",
              "argument": {
                "type": "NewExpression",
                "callee": {
                  "type": "Identifier",
                  "name": "ImmutableMap",
                  "range": [
                    2018,
                    2030
                  ],
                  "loc": {
                    "start": {
                      "line": 50,
                      "column": 13
                    },
                    "end": {
                      "line": 50,
                      "column": 25
                    }
                  }
                },
                "arguments": [
                  {
                    "type": "ObjectExpression",
                    "properties": [
                      {
                        "type": "Property",
                        "key": {
                          "type": "Identifier",
                          "name": "isLoading",
                          "range": [
                            2037,
                            2046
                          ],
                          "loc": {
                            "start": {
                              "line": 51,
                              "column": 4
                            },
                            "end": {
                              "line": 51,
                              "column": 13
                            }
                          }
                        },
                        "value": {
                          "type": "Literal",
                          "value": false,
                          "raw": "false",
                          "range": [
                            2048,
                            2053
                          ],
                          "loc": {
                            "start": {
                              "line": 51,
                              "column": 15
                            },
                            "end": {
                              "line": 51,
                              "column": 20
                            }
                          }
                        },
                        "kind": "init",
                        "method": false,
                        "shorthand": false,
                        "computed": false,
                        "range": [
                          2037,
                          2053
                        ],
                        "loc": {
                          "start": {
                            "line": 51,
                            "column": 4
                          },
                          "end": {
                            "line": 51,
                            "column": 20
                          }
                        }
                      },
                      {
                        "type": "Property",
                        "key": {
                          "type": "Identifier",
                          "name": "isDeleted",
                          "range": [
                            2059,
                            2068
                          ],
                          "loc": {
                            "start": {
                              "line": 52,
                              "column": 4
                            },
                            "end": {
                              "line": 52,
                              "column": 13
                            }
                          }
                        },
                        "value": {
                          "type": "Literal",
                          "value": false,
                          "raw": "false",
                          "range": [
                            2070,
                            2075
                          ],
                          "loc": {
                            "start": {
                              "line": 52,
                              "column": 15
                            },
                            "end": {
                              "line": 52,
                              "column": 20
                            }
                          }
                        },
                        "kind": "init",
                        "method": false,
                        "shorthand": false,
                        "computed": false,
                        "range": [
                          2059,
                          2075
                        ],
                        "loc": {
                          "start": {
                            "line": 52,
                            "column": 4
                          },
                          "end": {
                            "line": 52,
                            "column": 20
                          }
                        }
                      },
                      {
                        "type": "Property",
                        "key": {
                          "type": "Identifier",
                          "name": "apiError",
                          "range": [
                            2081,
                            2089
                          ],
                          "loc": {
                            "start": {
                              "line": 53,
                              "column": 4
                            },
                            "end": {
                              "line": 53,
                              "column": 12
                            }
                          }
                        },
                        "value": {
                          "type": "Literal",
                          "value": null,
                          "raw": "null",
                          "range": [
                            2091,
                            2095
                          ],
                          "loc": {
                            "start": {
                              "line": 53,
                              "column": 14
                            },
                            "end": {
                              "line": 53,
                              "column": 18
                            }
                          }
                        },
                        "kind": "init",
                        "method": false,
                        "shorthand": false,
                        "computed": false,
                        "range": [
                          2081,
                          2095
                        ],
                        "loc": {
                          "start": {
                            "line": 53,
                            "column": 4
                          },
                          "end": {
                            "line": 53,
                            "column": 18
                          }
                        }
                      },
                      {
                        "type": "Property",
                        "key": {
                          "type": "Identifier",
                          "name": "data",
                          "range": [
                            2101,
                            2105
                          ],
                          "loc": {
                            "start": {
                              "line": 54,
                              "column": 4
                            },
                            "end": {
                              "line": 54,
                              "column": 8
                            }
                          }
                        },
                        "value": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "getData",
                            "range": [
                              2107,
                              2114
                            ],
                            "loc": {
                              "start": {
                                "line": 54,
                                "column": 10
                              },
                              "end": {
                                "line": 54,
                                "column": 17
                              }
                            }
                          },
                          "arguments": [],
                          "range": [
                            2107,
                            2116
                          ],
                          "loc": {
                            "start": {
                              "line": 54,
                              "column": 10
                            },
                            "end": {
                              "line": 54,
                              "column": 19
                            }
                          }
                        },
                        "kind": "init",
                        "method": false,
                        "shorthand": false,
                        "computed": false,
                        "range": [
                          2101,
                          2116
                        ],
                        "loc": {
                          "start": {
                            "line": 54,
                            "column": 4
                          },
                          "end": {
                            "line": 54,
                            "column": 19
                          }
                        }
                      },
                      {
                        "type": "Property",
                        "key": {
                          "type": "Identifier",
                          "name": "timestamp",
                          "range": [
                            2122,
                            2131
                          ],
                          "loc": {
                            "start": {
                              "line": 55,
                              "column": 4
                            },
                            "end": {
                              "line": 55,
                              "column": 13
                            }
                          }
                        },
                        "value": {
                          "type": "NewExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "Date",
                            "range": [
                              2137,
                              2141
                            ],
                            "loc": {
                              "start": {
                                "line": 55,
                                "column": 19
                              },
                              "end": {
                                "line": 55,
                                "column": 23
                              }
                            }
                          },
                          "arguments": [],
                          "range": [
                            2133,
                            2143
                          ],
                          "loc": {
                            "start": {
                              "line": 55,
                              "column": 15
                            },
                            "end": {
                              "line": 55,
                              "column": 25
                            }
                          }
                        },
                        "kind": "init",
                        "method": false,
                        "shorthand": false,
                        "computed": false,
                        "range": [
                          2122,
                          2143
                        ],
                        "loc": {
                          "start": {
                            "line": 55,
                            "column": 4
                          },
                          "end": {
                            "line": 55,
                            "column": 25
                          }
                        }
                      }
                    ],
                    "range": [
                      2031,
                      2147
                    ],
                    "loc": {
                      "start": {
                        "line": 50,
                        "column": 26
                      },
                      "end": {
                        "line": 56,
                        "column": 3
                      }
                    }
                  }
                ],
                "range": [
                  2014,
                  2148
                ],
                "loc": {
                  "start": {
                    "line": 50,
                    "column": 9
                  },
                  "end": {
                    "line": 56,
                    "column": 4
                  }
                }
              },
              "range": [
                2007,
                2149
              ],
              "loc": {
                "start": {
                  "line": 50,
                  "column": 2
                },
                "end": {
                  "line": 57,
                  "column": 0
                }
              }
            }
          ],
          "range": [
            1824,
            2150
          ],
          "loc": {
            "start": {
              "line": 39,
              "column": 82
            },
            "end": {
              "line": 57,
              "column": 1
            }
          }
        },
        "generator": false,
        "expression": false,
        "range": [
          1749,
          2150
        ],
        "loc": {
          "start": {
            "line": 39,
            "column": 7
          },
          "end": {
            "line": 57,
            "column": 1
          }
        },
        "leadingComments": [
          {
            "type": "Block",
            "value": "*\n * Util used by all `action.js`-files in `redux/api/*`.\n * This is used to format data to store in redux-state-map when an api-call is successful.\n *\n * The given `newData` is inserted as an ImmutableMap `data`.\n *\n * sets `isLoading` to `false`, `apiError` to null and `timestamp` to now.\n *\n * @param newData {Object} the object returned from the api which should be formated for insertion in the\n *   redux-state-map. If fromList is true this should be an iterable.\n * @param fromList {boolean} if true, make an ImmutableList of the given data instead of ImmutableMap\n * @param noWrap {boolean} if true, newData will not be wrapped in ImmutableMap or ImmutableList. Only use this if the\n *   data you are setting is already an ImmutableMap or ImmutableList!\n * @return {Immutable.Map} newly formatted ImmutableMap ready to be placed in redux-state-map\n ",
            "range": [
              879,
              1741
            ],
            "loc": {
              "start": {
                "line": 24,
                "column": 0
              },
              "end": {
                "line": 38,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "Block",
            "value": "*\n * Util used by all `action.js`-files in `redux/api/*`.\n *\n * This is used to build a common error-format for all redux-map-entries.\n * sets `isLoading` to `false`, `data` to `null`, `timestamp` to now.\n *\n * stores the error in the field `apiError` formatted like this:\n *\n * apiError: ImmutableMap({\n *  status: error.response.status,\n *  bodydata: ImmutableMap(error.response.bodydata)\n * })\n *\n * @param error\n * @return {Immutable.Map}\n ",
            "range": [
              2152,
              2600
            ],
            "loc": {
              "start": {
                "line": 59,
                "column": 0
              },
              "end": {
                "line": 74,
                "column": 3
              }
            }
          }
        ]
      },
      "specifiers": [],
      "source": null,
      "range": [
        1742,
        2150
      ],
      "loc": {
        "start": {
          "line": 39,
          "column": 0
        },
        "end": {
          "line": 57,
          "column": 1
        }
      },
      "leadingComments": [
        {
          "type": "Block",
          "value": "*\n * Util used by all `action.js`-files in `redux/api/*`.\n * This is used to format data to store in redux-state-map when an api-call is successful.\n *\n * The given `newData` is inserted as an ImmutableMap `data`.\n *\n * sets `isLoading` to `false`, `apiError` to null and `timestamp` to now.\n *\n * @param newData {Object} the object returned from the api which should be formated for insertion in the\n *   redux-state-map. If fromList is true this should be an iterable.\n * @param fromList {boolean} if true, make an ImmutableList of the given data instead of ImmutableMap\n * @param noWrap {boolean} if true, newData will not be wrapped in ImmutableMap or ImmutableList. Only use this if the\n *   data you are setting is already an ImmutableMap or ImmutableList!\n * @return {Immutable.Map} newly formatted ImmutableMap ready to be placed in redux-state-map\n ",
          "range": [
            879,
            1741
          ],
          "loc": {
            "start": {
              "line": 24,
              "column": 0
            },
            "end": {
              "line": 38,
              "column": 3
            }
          }
        }
      ],
      "trailingComments": [
        {
          "type": "Block",
          "value": "*\n * Util used by all `action.js`-files in `redux/api/*`.\n *\n * This is used to build a common error-format for all redux-map-entries.\n * sets `isLoading` to `false`, `data` to `null`, `timestamp` to now.\n *\n * stores the error in the field `apiError` formatted like this:\n *\n * apiError: ImmutableMap({\n *  status: error.response.status,\n *  bodydata: ImmutableMap(error.response.bodydata)\n * })\n *\n * @param error\n * @return {Immutable.Map}\n ",
          "range": [
            2152,
            2600
          ],
          "loc": {
            "start": {
              "line": 59,
              "column": 0
            },
            "end": {
              "line": 74,
              "column": 3
            }
          }
        }
      ]
    },
    {
      "type": "ExportNamedDeclaration",
      "declaration": {
        "type": "FunctionDeclaration",
        "id": {
          "type": "Identifier",
          "name": "makeApiDataMapError",
          "range": [
            2617,
            2636
          ],
          "loc": {
            "start": {
              "line": 75,
              "column": 16
            },
            "end": {
              "line": 75,
              "column": 35
            }
          }
        },
        "params": [
          {
            "type": "Identifier",
            "name": "error",
            "range": [
              2638,
              2643
            ],
            "loc": {
              "start": {
                "line": 75,
                "column": 37
              },
              "end": {
                "line": 75,
                "column": 42
              }
            }
          }
        ],
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "ExpressionStatement",
              "expression": {
                "type": "CallExpression",
                "callee": {
                  "type": "MemberExpression",
                  "computed": false,
                  "object": {
                    "type": "Identifier",
                    "name": "logger",
                    "range": [
                      2649,
                      2655
                    ],
                    "loc": {
                      "start": {
                        "line": 76,
                        "column": 2
                      },
                      "end": {
                        "line": 76,
                        "column": 8
                      }
                    }
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "warning",
                    "range": [
                      2656,
                      2663
                    ],
                    "loc": {
                      "start": {
                        "line": 76,
                        "column": 9
                      },
                      "end": {
                        "line": 76,
                        "column": 16
                      }
                    }
                  },
                  "range": [
                    2649,
                    2663
                  ],
                  "loc": {
                    "start": {
                      "line": 76,
                      "column": 2
                    },
                    "end": {
                      "line": 76,
                      "column": 16
                    }
                  }
                },
                "arguments": [
                  {
                    "type": "Literal",
                    "value": "makeApiDataMapError: got error: ",
                    "raw": "'makeApiDataMapError: got error: '",
                    "range": [
                      2664,
                      2698
                    ],
                    "loc": {
                      "start": {
                        "line": 76,
                        "column": 17
                      },
                      "end": {
                        "line": 76,
                        "column": 51
                      }
                    }
                  },
                  {
                    "type": "Identifier",
                    "name": "error",
                    "range": [
                      2700,
                      2705
                    ],
                    "loc": {
                      "start": {
                        "line": 76,
                        "column": 53
                      },
                      "end": {
                        "line": 76,
                        "column": 58
                      }
                    }
                  }
                ],
                "range": [
                  2649,
                  2706
                ],
                "loc": {
                  "start": {
                    "line": 76,
                    "column": 2
                  },
                  "end": {
                    "line": 76,
                    "column": 59
                  }
                }
              },
              "range": [
                2649,
                2709
              ],
              "loc": {
                "start": {
                  "line": 76,
                  "column": 2
                },
                "end": {
                  "line": 77,
                  "column": 2
                }
              }
            },
            {
              "type": "ReturnStatement",
              "argument": {
                "type": "NewExpression",
                "callee": {
                  "type": "Identifier",
                  "name": "ImmutableMap",
                  "range": [
                    2720,
                    2732
                  ],
                  "loc": {
                    "start": {
                      "line": 77,
                      "column": 13
                    },
                    "end": {
                      "line": 77,
                      "column": 25
                    }
                  }
                },
                "arguments": [
                  {
                    "type": "ObjectExpression",
                    "properties": [
                      {
                        "type": "Property",
                        "key": {
                          "type": "Identifier",
                          "name": "isLoading",
                          "range": [
                            2739,
                            2748
                          ],
                          "loc": {
                            "start": {
                              "line": 78,
                              "column": 4
                            },
                            "end": {
                              "line": 78,
                              "column": 13
                            }
                          }
                        },
                        "value": {
                          "type": "Literal",
                          "value": false,
                          "raw": "false",
                          "range": [
                            2750,
                            2755
                          ],
                          "loc": {
                            "start": {
                              "line": 78,
                              "column": 15
                            },
                            "end": {
                              "line": 78,
                              "column": 20
                            }
                          }
                        },
                        "kind": "init",
                        "method": false,
                        "shorthand": false,
                        "computed": false,
                        "range": [
                          2739,
                          2755
                        ],
                        "loc": {
                          "start": {
                            "line": 78,
                            "column": 4
                          },
                          "end": {
                            "line": 78,
                            "column": 20
                          }
                        }
                      },
                      {
                        "type": "Property",
                        "key": {
                          "type": "Identifier",
                          "name": "isDeleted",
                          "range": [
                            2761,
                            2770
                          ],
                          "loc": {
                            "start": {
                              "line": 79,
                              "column": 4
                            },
                            "end": {
                              "line": 79,
                              "column": 13
                            }
                          }
                        },
                        "value": {
                          "type": "Literal",
                          "value": false,
                          "raw": "false",
                          "range": [
                            2772,
                            2777
                          ],
                          "loc": {
                            "start": {
                              "line": 79,
                              "column": 15
                            },
                            "end": {
                              "line": 79,
                              "column": 20
                            }
                          }
                        },
                        "kind": "init",
                        "method": false,
                        "shorthand": false,
                        "computed": false,
                        "range": [
                          2761,
                          2777
                        ],
                        "loc": {
                          "start": {
                            "line": 79,
                            "column": 4
                          },
                          "end": {
                            "line": 79,
                            "column": 20
                          }
                        }
                      },
                      {
                        "type": "Property",
                        "key": {
                          "type": "Identifier",
                          "name": "apiError",
                          "range": [
                            2783,
                            2791
                          ],
                          "loc": {
                            "start": {
                              "line": 80,
                              "column": 4
                            },
                            "end": {
                              "line": 80,
                              "column": 12
                            }
                          }
                        },
                        "value": {
                          "type": "NewExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "ImmutableMap",
                            "range": [
                              2797,
                              2809
                            ],
                            "loc": {
                              "start": {
                                "line": 80,
                                "column": 18
                              },
                              "end": {
                                "line": 80,
                                "column": 30
                              }
                            }
                          },
                          "arguments": [
                            {
                              "type": "ObjectExpression",
                              "properties": [
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Identifier",
                                    "name": "status",
                                    "range": [
                                      2818,
                                      2824
                                    ],
                                    "loc": {
                                      "start": {
                                        "line": 81,
                                        "column": 6
                                      },
                                      "end": {
                                        "line": 81,
                                        "column": 12
                                      }
                                    }
                                  },
                                  "value": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "error",
                                        "range": [
                                          2826,
                                          2831
                                        ],
                                        "loc": {
                                          "start": {
                                            "line": 81,
                                            "column": 14
                                          },
                                          "end": {
                                            "line": 81,
                                            "column": 19
                                          }
                                        }
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "response",
                                        "range": [
                                          2832,
                                          2840
                                        ],
                                        "loc": {
                                          "start": {
                                            "line": 81,
                                            "column": 20
                                          },
                                          "end": {
                                            "line": 81,
                                            "column": 28
                                          }
                                        }
                                      },
                                      "range": [
                                        2826,
                                        2840
                                      ],
                                      "loc": {
                                        "start": {
                                          "line": 81,
                                          "column": 14
                                        },
                                        "end": {
                                          "line": 81,
                                          "column": 28
                                        }
                                      }
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "status",
                                      "range": [
                                        2841,
                                        2847
                                      ],
                                      "loc": {
                                        "start": {
                                          "line": 81,
                                          "column": 29
                                        },
                                        "end": {
                                          "line": 81,
                                          "column": 35
                                        }
                                      }
                                    },
                                    "range": [
                                      2826,
                                      2847
                                    ],
                                    "loc": {
                                      "start": {
                                        "line": 81,
                                        "column": 14
                                      },
                                      "end": {
                                        "line": 81,
                                        "column": 35
                                      }
                                    }
                                  },
                                  "kind": "init",
                                  "method": false,
                                  "shorthand": false,
                                  "computed": false,
                                  "range": [
                                    2818,
                                    2847
                                  ],
                                  "loc": {
                                    "start": {
                                      "line": 81,
                                      "column": 6
                                    },
                                    "end": {
                                      "line": 81,
                                      "column": 35
                                    }
                                  }
                                },
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Identifier",
                                    "name": "bodydata",
                                    "range": [
                                      2855,
                                      2863
                                    ],
                                    "loc": {
                                      "start": {
                                        "line": 82,
                                        "column": 6
                                      },
                                      "end": {
                                        "line": 82,
                                        "column": 14
                                      }
                                    }
                                  },
                                  "value": {
                                    "type": "NewExpression",
                                    "callee": {
                                      "type": "Identifier",
                                      "name": "ImmutableMap",
                                      "range": [
                                        2869,
                                        2881
                                      ],
                                      "loc": {
                                        "start": {
                                          "line": 82,
                                          "column": 20
                                        },
                                        "end": {
                                          "line": 82,
                                          "column": 32
                                        }
                                      }
                                    },
                                    "arguments": [
                                      {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "error",
                                            "range": [
                                              2882,
                                              2887
                                            ],
                                            "loc": {
                                              "start": {
                                                "line": 82,
                                                "column": 33
                                              },
                                              "end": {
                                                "line": 82,
                                                "column": 38
                                              }
                                            }
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "response",
                                            "range": [
                                              2888,
                                              2896
                                            ],
                                            "loc": {
                                              "start": {
                                                "line": 82,
                                                "column": 39
                                              },
                                              "end": {
                                                "line": 82,
                                                "column": 47
                                              }
                                            }
                                          },
                                          "range": [
                                            2882,
                                            2896
                                          ],
                                          "loc": {
                                            "start": {
                                              "line": 82,
                                              "column": 33
                                            },
                                            "end": {
                                              "line": 82,
                                              "column": 47
                                            }
                                          }
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "bodydata",
                                          "range": [
                                            2897,
                                            2905
                                          ],
                                          "loc": {
                                            "start": {
                                              "line": 82,
                                              "column": 48
                                            },
                                            "end": {
                                              "line": 82,
                                              "column": 56
                                            }
                                          }
                                        },
                                        "range": [
                                          2882,
                                          2905
                                        ],
                                        "loc": {
                                          "start": {
                                            "line": 82,
                                            "column": 33
                                          },
                                          "end": {
                                            "line": 82,
                                            "column": 56
                                          }
                                        }
                                      }
                                    ],
                                    "range": [
                                      2865,
                                      2906
                                    ],
                                    "loc": {
                                      "start": {
                                        "line": 82,
                                        "column": 16
                                      },
                                      "end": {
                                        "line": 82,
                                        "column": 57
                                      }
                                    }
                                  },
                                  "kind": "init",
                                  "method": false,
                                  "shorthand": false,
                                  "computed": false,
                                  "range": [
                                    2855,
                                    2906
                                  ],
                                  "loc": {
                                    "start": {
                                      "line": 82,
                                      "column": 6
                                    },
                                    "end": {
                                      "line": 82,
                                      "column": 57
                                    }
                                  }
                                }
                              ],
                              "range": [
                                2810,
                                2912
                              ],
                              "loc": {
                                "start": {
                                  "line": 80,
                                  "column": 31
                                },
                                "end": {
                                  "line": 83,
                                  "column": 5
                                }
                              }
                            }
                          ],
                          "range": [
                            2793,
                            2913
                          ],
                          "loc": {
                            "start": {
                              "line": 80,
                              "column": 14
                            },
                            "end": {
                              "line": 83,
                              "column": 6
                            }
                          }
                        },
                        "kind": "init",
                        "method": false,
                        "shorthand": false,
                        "computed": false,
                        "range": [
                          2783,
                          2913
                        ],
                        "loc": {
                          "start": {
                            "line": 80,
                            "column": 4
                          },
                          "end": {
                            "line": 83,
                            "column": 6
                          }
                        }
                      },
                      {
                        "type": "Property",
                        "key": {
                          "type": "Identifier",
                          "name": "data",
                          "range": [
                            2919,
                            2923
                          ],
                          "loc": {
                            "start": {
                              "line": 84,
                              "column": 4
                            },
                            "end": {
                              "line": 84,
                              "column": 8
                            }
                          }
                        },
                        "value": {
                          "type": "Literal",
                          "value": null,
                          "raw": "null",
                          "range": [
                            2925,
                            2929
                          ],
                          "loc": {
                            "start": {
                              "line": 84,
                              "column": 10
                            },
                            "end": {
                              "line": 84,
                              "column": 14
                            }
                          }
                        },
                        "kind": "init",
                        "method": false,
                        "shorthand": false,
                        "computed": false,
                        "range": [
                          2919,
                          2929
                        ],
                        "loc": {
                          "start": {
                            "line": 84,
                            "column": 4
                          },
                          "end": {
                            "line": 84,
                            "column": 14
                          }
                        }
                      },
                      {
                        "type": "Property",
                        "key": {
                          "type": "Identifier",
                          "name": "timestamp",
                          "range": [
                            2935,
                            2944
                          ],
                          "loc": {
                            "start": {
                              "line": 85,
                              "column": 4
                            },
                            "end": {
                              "line": 85,
                              "column": 13
                            }
                          }
                        },
                        "value": {
                          "type": "NewExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "Date",
                            "range": [
                              2950,
                              2954
                            ],
                            "loc": {
                              "start": {
                                "line": 85,
                                "column": 19
                              },
                              "end": {
                                "line": 85,
                                "column": 23
                              }
                            }
                          },
                          "arguments": [],
                          "range": [
                            2946,
                            2956
                          ],
                          "loc": {
                            "start": {
                              "line": 85,
                              "column": 15
                            },
                            "end": {
                              "line": 85,
                              "column": 25
                            }
                          }
                        },
                        "kind": "init",
                        "method": false,
                        "shorthand": false,
                        "computed": false,
                        "range": [
                          2935,
                          2956
                        ],
                        "loc": {
                          "start": {
                            "line": 85,
                            "column": 4
                          },
                          "end": {
                            "line": 85,
                            "column": 25
                          }
                        }
                      }
                    ],
                    "range": [
                      2733,
                      2960
                    ],
                    "loc": {
                      "start": {
                        "line": 77,
                        "column": 26
                      },
                      "end": {
                        "line": 86,
                        "column": 3
                      }
                    }
                  }
                ],
                "range": [
                  2716,
                  2961
                ],
                "loc": {
                  "start": {
                    "line": 77,
                    "column": 9
                  },
                  "end": {
                    "line": 86,
                    "column": 4
                  }
                }
              },
              "range": [
                2709,
                2962
              ],
              "loc": {
                "start": {
                  "line": 77,
                  "column": 2
                },
                "end": {
                  "line": 87,
                  "column": 0
                }
              }
            }
          ],
          "range": [
            2645,
            2963
          ],
          "loc": {
            "start": {
              "line": 75,
              "column": 44
            },
            "end": {
              "line": 87,
              "column": 1
            }
          }
        },
        "generator": false,
        "expression": false,
        "range": [
          2608,
          2963
        ],
        "loc": {
          "start": {
            "line": 75,
            "column": 7
          },
          "end": {
            "line": 87,
            "column": 1
          }
        },
        "leadingComments": [
          {
            "type": "Block",
            "value": "*\n * Util used by all `action.js`-files in `redux/api/*`.\n *\n * This is used to build a common error-format for all redux-map-entries.\n * sets `isLoading` to `false`, `data` to `null`, `timestamp` to now.\n *\n * stores the error in the field `apiError` formatted like this:\n *\n * apiError: ImmutableMap({\n *  status: error.response.status,\n *  bodydata: ImmutableMap(error.response.bodydata)\n * })\n *\n * @param error\n * @return {Immutable.Map}\n ",
            "range": [
              2152,
              2600
            ],
            "loc": {
              "start": {
                "line": 59,
                "column": 0
              },
              "end": {
                "line": 74,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "Block",
            "value": "*\n * Used to mark an object in redux-state as deleted.\n * @param oldData\n * @return {Immutable.Map}\n ",
            "range": [
              2965,
              3070
            ],
            "loc": {
              "start": {
                "line": 89,
                "column": 0
              },
              "end": {
                "line": 93,
                "column": 3
              }
            }
          }
        ]
      },
      "specifiers": [],
      "source": null,
      "range": [
        2601,
        2963
      ],
      "loc": {
        "start": {
          "line": 75,
          "column": 0
        },
        "end": {
          "line": 87,
          "column": 1
        }
      },
      "leadingComments": [
        {
          "type": "Block",
          "value": "*\n * Util used by all `action.js`-files in `redux/api/*`.\n *\n * This is used to build a common error-format for all redux-map-entries.\n * sets `isLoading` to `false`, `data` to `null`, `timestamp` to now.\n *\n * stores the error in the field `apiError` formatted like this:\n *\n * apiError: ImmutableMap({\n *  status: error.response.status,\n *  bodydata: ImmutableMap(error.response.bodydata)\n * })\n *\n * @param error\n * @return {Immutable.Map}\n ",
          "range": [
            2152,
            2600
          ],
          "loc": {
            "start": {
              "line": 59,
              "column": 0
            },
            "end": {
              "line": 74,
              "column": 3
            }
          }
        }
      ],
      "trailingComments": [
        {
          "type": "Block",
          "value": "*\n * Used to mark an object in redux-state as deleted.\n * @param oldData\n * @return {Immutable.Map}\n ",
          "range": [
            2965,
            3070
          ],
          "loc": {
            "start": {
              "line": 89,
              "column": 0
            },
            "end": {
              "line": 93,
              "column": 3
            }
          }
        }
      ]
    },
    {
      "type": "ExportNamedDeclaration",
      "declaration": {
        "type": "FunctionDeclaration",
        "id": {
          "type": "Identifier",
          "name": "makeApiDataMapDeleted",
          "range": [
            3087,
            3108
          ],
          "loc": {
            "start": {
              "line": 94,
              "column": 16
            },
            "end": {
              "line": 94,
              "column": 37
            }
          }
        },
        "params": [
          {
            "type": "AssignmentPattern",
            "left": {
              "type": "Identifier",
              "name": "oldData",
              "range": [
                3110,
                3117
              ],
              "loc": {
                "start": {
                  "line": 94,
                  "column": 39
                },
                "end": {
                  "line": 94,
                  "column": 46
                }
              }
            },
            "right": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "ImmutableMap",
                "range": [
                  3124,
                  3136
                ],
                "loc": {
                  "start": {
                    "line": 94,
                    "column": 53
                  },
                  "end": {
                    "line": 94,
                    "column": 65
                  }
                }
              },
              "arguments": [],
              "range": [
                3120,
                3138
              ],
              "loc": {
                "start": {
                  "line": 94,
                  "column": 49
                },
                "end": {
                  "line": 94,
                  "column": 67
                }
              }
            },
            "range": [
              3110,
              3138
            ],
            "loc": {
              "start": {
                "line": 94,
                "column": 39
              },
              "end": {
                "line": 94,
                "column": 67
              }
            }
          }
        ],
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "ReturnStatement",
              "argument": {
                "type": "NewExpression",
                "callee": {
                  "type": "Identifier",
                  "name": "ImmutableMap",
                  "range": [
                    3155,
                    3167
                  ],
                  "loc": {
                    "start": {
                      "line": 95,
                      "column": 13
                    },
                    "end": {
                      "line": 95,
                      "column": 25
                    }
                  }
                },
                "arguments": [
                  {
                    "type": "ObjectExpression",
                    "properties": [
                      {
                        "type": "Property",
                        "key": {
                          "type": "Identifier",
                          "name": "isLoading",
                          "range": [
                            3174,
                            3183
                          ],
                          "loc": {
                            "start": {
                              "line": 96,
                              "column": 4
                            },
                            "end": {
                              "line": 96,
                              "column": 13
                            }
                          }
                        },
                        "value": {
                          "type": "Literal",
                          "value": false,
                          "raw": "false",
                          "range": [
                            3185,
                            3190
                          ],
                          "loc": {
                            "start": {
                              "line": 96,
                              "column": 15
                            },
                            "end": {
                              "line": 96,
                              "column": 20
                            }
                          }
                        },
                        "kind": "init",
                        "method": false,
                        "shorthand": false,
                        "computed": false,
                        "range": [
                          3174,
                          3190
                        ],
                        "loc": {
                          "start": {
                            "line": 96,
                            "column": 4
                          },
                          "end": {
                            "line": 96,
                            "column": 20
                          }
                        }
                      },
                      {
                        "type": "Property",
                        "key": {
                          "type": "Identifier",
                          "name": "isDeleted",
                          "range": [
                            3196,
                            3205
                          ],
                          "loc": {
                            "start": {
                              "line": 97,
                              "column": 4
                            },
                            "end": {
                              "line": 97,
                              "column": 13
                            }
                          }
                        },
                        "value": {
                          "type": "Literal",
                          "value": true,
                          "raw": "true",
                          "range": [
                            3207,
                            3211
                          ],
                          "loc": {
                            "start": {
                              "line": 97,
                              "column": 15
                            },
                            "end": {
                              "line": 97,
                              "column": 19
                            }
                          }
                        },
                        "kind": "init",
                        "method": false,
                        "shorthand": false,
                        "computed": false,
                        "range": [
                          3196,
                          3211
                        ],
                        "loc": {
                          "start": {
                            "line": 97,
                            "column": 4
                          },
                          "end": {
                            "line": 97,
                            "column": 19
                          }
                        }
                      },
                      {
                        "type": "Property",
                        "key": {
                          "type": "Identifier",
                          "name": "apiError",
                          "range": [
                            3217,
                            3225
                          ],
                          "loc": {
                            "start": {
                              "line": 98,
                              "column": 4
                            },
                            "end": {
                              "line": 98,
                              "column": 12
                            }
                          }
                        },
                        "value": {
                          "type": "Literal",
                          "value": null,
                          "raw": "null",
                          "range": [
                            3227,
                            3231
                          ],
                          "loc": {
                            "start": {
                              "line": 98,
                              "column": 14
                            },
                            "end": {
                              "line": 98,
                              "column": 18
                            }
                          }
                        },
                        "kind": "init",
                        "method": false,
                        "shorthand": false,
                        "computed": false,
                        "range": [
                          3217,
                          3231
                        ],
                        "loc": {
                          "start": {
                            "line": 98,
                            "column": 4
                          },
                          "end": {
                            "line": 98,
                            "column": 18
                          }
                        }
                      },
                      {
                        "type": "Property",
                        "key": {
                          "type": "Identifier",
                          "name": "data",
                          "range": [
                            3237,
                            3241
                          ],
                          "loc": {
                            "start": {
                              "line": 99,
                              "column": 4
                            },
                            "end": {
                              "line": 99,
                              "column": 8
                            }
                          }
                        },
                        "value": {
                          "type": "Literal",
                          "value": null,
                          "raw": "null",
                          "range": [
                            3243,
                            3247
                          ],
                          "loc": {
                            "start": {
                              "line": 99,
                              "column": 10
                            },
                            "end": {
                              "line": 99,
                              "column": 14
                            }
                          }
                        },
                        "kind": "init",
                        "method": false,
                        "shorthand": false,
                        "computed": false,
                        "range": [
                          3237,
                          3247
                        ],
                        "loc": {
                          "start": {
                            "line": 99,
                            "column": 4
                          },
                          "end": {
                            "line": 99,
                            "column": 14
                          }
                        }
                      },
                      {
                        "type": "Property",
                        "key": {
                          "type": "Identifier",
                          "name": "timestamp",
                          "range": [
                            3253,
                            3262
                          ],
                          "loc": {
                            "start": {
                              "line": 100,
                              "column": 4
                            },
                            "end": {
                              "line": 100,
                              "column": 13
                            }
                          }
                        },
                        "value": {
                          "type": "NewExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "Date",
                            "range": [
                              3268,
                              3272
                            ],
                            "loc": {
                              "start": {
                                "line": 100,
                                "column": 19
                              },
                              "end": {
                                "line": 100,
                                "column": 23
                              }
                            }
                          },
                          "arguments": [],
                          "range": [
                            3264,
                            3274
                          ],
                          "loc": {
                            "start": {
                              "line": 100,
                              "column": 15
                            },
                            "end": {
                              "line": 100,
                              "column": 25
                            }
                          }
                        },
                        "kind": "init",
                        "method": false,
                        "shorthand": false,
                        "computed": false,
                        "range": [
                          3253,
                          3274
                        ],
                        "loc": {
                          "start": {
                            "line": 100,
                            "column": 4
                          },
                          "end": {
                            "line": 100,
                            "column": 25
                          }
                        }
                      },
                      {
                        "type": "Property",
                        "key": {
                          "type": "Identifier",
                          "name": "oldData",
                          "range": [
                            3280,
                            3287
                          ],
                          "loc": {
                            "start": {
                              "line": 101,
                              "column": 4
                            },
                            "end": {
                              "line": 101,
                              "column": 11
                            }
                          }
                        },
                        "value": {
                          "type": "Identifier",
                          "name": "oldData",
                          "range": [
                            3280,
                            3287
                          ],
                          "loc": {
                            "start": {
                              "line": 101,
                              "column": 4
                            },
                            "end": {
                              "line": 101,
                              "column": 11
                            }
                          }
                        },
                        "kind": "init",
                        "method": false,
                        "shorthand": true,
                        "computed": false,
                        "range": [
                          3280,
                          3287
                        ],
                        "loc": {
                          "start": {
                            "line": 101,
                            "column": 4
                          },
                          "end": {
                            "line": 101,
                            "column": 11
                          }
                        }
                      }
                    ],
                    "range": [
                      3168,
                      3291
                    ],
                    "loc": {
                      "start": {
                        "line": 95,
                        "column": 26
                      },
                      "end": {
                        "line": 102,
                        "column": 3
                      }
                    }
                  }
                ],
                "range": [
                  3151,
                  3292
                ],
                "loc": {
                  "start": {
                    "line": 95,
                    "column": 9
                  },
                  "end": {
                    "line": 102,
                    "column": 4
                  }
                }
              },
              "range": [
                3144,
                3293
              ],
              "loc": {
                "start": {
                  "line": 95,
                  "column": 2
                },
                "end": {
                  "line": 103,
                  "column": 0
                }
              }
            }
          ],
          "range": [
            3140,
            3294
          ],
          "loc": {
            "start": {
              "line": 94,
              "column": 69
            },
            "end": {
              "line": 103,
              "column": 1
            }
          }
        },
        "generator": false,
        "expression": false,
        "range": [
          3078,
          3294
        ],
        "loc": {
          "start": {
            "line": 94,
            "column": 7
          },
          "end": {
            "line": 103,
            "column": 1
          }
        },
        "leadingComments": [
          {
            "type": "Block",
            "value": "*\n * Used to mark an object in redux-state as deleted.\n * @param oldData\n * @return {Immutable.Map}\n ",
            "range": [
              2965,
              3070
            ],
            "loc": {
              "start": {
                "line": 89,
                "column": 0
              },
              "end": {
                "line": 93,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "Block",
            "value": "*\n * Simple util to fetch data from a redux-api-map (which should always be built by {@link makeApiDataMapIsLoading},\n * {@link makeApiDataMapNewData} or {@link makeApiDataMapError}).\n *\n * This util will lookup the given id in the given map and return it if it exists.\n * If the entry is missing or loading, null is returned.\n * If the entry is missing (and not already loading), the given `dispatchAction` is dispatched and null is returned.\n *\n * Note that this util will still return the object even if it is an error-object (`apiError !== null`), so you need\n * to handle errors in your component.\n *\n * @param map {Immutable.Map} a map built by {@link makeApiDataMapIsLoading}, {@link makeApiDataMapNewData} or\n *   {@link makeApiDataMapError}\n * @param id {number} the entry-id to look for in the map\n * @param dispatchAction {function} the `redux.api...actions.<action>` to dispatch to load the entry if missing\n * @param dispatch {function} a `redux-thunk` dispatch, like `this.props.dispatch` from a connected React.Component.\n * @return {null|Immutable.Map} null if the entry is loading, or an ImmutableMap of the entry if it exists.\n ",
            "range": [
              3296,
              4446
            ],
            "loc": {
              "start": {
                "line": 105,
                "column": 0
              },
              "end": {
                "line": 122,
                "column": 3
              }
            }
          }
        ]
      },
      "specifiers": [],
      "source": null,
      "range": [
        3071,
        3294
      ],
      "loc": {
        "start": {
          "line": 94,
          "column": 0
        },
        "end": {
          "line": 103,
          "column": 1
        }
      },
      "leadingComments": [
        {
          "type": "Block",
          "value": "*\n * Used to mark an object in redux-state as deleted.\n * @param oldData\n * @return {Immutable.Map}\n ",
          "range": [
            2965,
            3070
          ],
          "loc": {
            "start": {
              "line": 89,
              "column": 0
            },
            "end": {
              "line": 93,
              "column": 3
            }
          }
        }
      ],
      "trailingComments": [
        {
          "type": "Block",
          "value": "*\n * Simple util to fetch data from a redux-api-map (which should always be built by {@link makeApiDataMapIsLoading},\n * {@link makeApiDataMapNewData} or {@link makeApiDataMapError}).\n *\n * This util will lookup the given id in the given map and return it if it exists.\n * If the entry is missing or loading, null is returned.\n * If the entry is missing (and not already loading), the given `dispatchAction` is dispatched and null is returned.\n *\n * Note that this util will still return the object even if it is an error-object (`apiError !== null`), so you need\n * to handle errors in your component.\n *\n * @param map {Immutable.Map} a map built by {@link makeApiDataMapIsLoading}, {@link makeApiDataMapNewData} or\n *   {@link makeApiDataMapError}\n * @param id {number} the entry-id to look for in the map\n * @param dispatchAction {function} the `redux.api...actions.<action>` to dispatch to load the entry if missing\n * @param dispatch {function} a `redux-thunk` dispatch, like `this.props.dispatch` from a connected React.Component.\n * @return {null|Immutable.Map} null if the entry is loading, or an ImmutableMap of the entry if it exists.\n ",
          "range": [
            3296,
            4446
          ],
          "loc": {
            "start": {
              "line": 105,
              "column": 0
            },
            "end": {
              "line": 122,
              "column": 3
            }
          }
        }
      ]
    },
    {
      "type": "ExportNamedDeclaration",
      "declaration": {
        "type": "FunctionDeclaration",
        "id": {
          "type": "Identifier",
          "name": "getObjectFromReduxMapOrNullIfLoading",
          "range": [
            4463,
            4499
          ],
          "loc": {
            "start": {
              "line": 123,
              "column": 16
            },
            "end": {
              "line": 123,
              "column": 52
            }
          }
        },
        "params": [
          {
            "type": "Identifier",
            "name": "map",
            "range": [
              4501,
              4504
            ],
            "loc": {
              "start": {
                "line": 123,
                "column": 54
              },
              "end": {
                "line": 123,
                "column": 57
              }
            }
          },
          {
            "type": "Identifier",
            "name": "id",
            "range": [
              4506,
              4508
            ],
            "loc": {
              "start": {
                "line": 123,
                "column": 59
              },
              "end": {
                "line": 123,
                "column": 61
              }
            }
          },
          {
            "type": "Identifier",
            "name": "dispatchAction",
            "range": [
              4510,
              4524
            ],
            "loc": {
              "start": {
                "line": 123,
                "column": 63
              },
              "end": {
                "line": 123,
                "column": 77
              }
            }
          },
          {
            "type": "Identifier",
            "name": "dispatch",
            "range": [
              4526,
              4534
            ],
            "loc": {
              "start": {
                "line": 123,
                "column": 79
              },
              "end": {
                "line": 123,
                "column": 87
              }
            }
          }
        ],
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "IfStatement",
              "test": {
                "type": "LogicalExpression",
                "operator": "||",
                "left": {
                  "type": "BinaryExpression",
                  "operator": "===",
                  "left": {
                    "type": "Identifier",
                    "name": "id",
                    "range": [
                      4544,
                      4546
                    ],
                    "loc": {
                      "start": {
                        "line": 124,
                        "column": 6
                      },
                      "end": {
                        "line": 124,
                        "column": 8
                      }
                    }
                  },
                  "right": {
                    "type": "Literal",
                    "value": null,
                    "raw": "null",
                    "range": [
                      4551,
                      4555
                    ],
                    "loc": {
                      "start": {
                        "line": 124,
                        "column": 13
                      },
                      "end": {
                        "line": 124,
                        "column": 17
                      }
                    }
                  },
                  "range": [
                    4544,
                    4555
                  ],
                  "loc": {
                    "start": {
                      "line": 124,
                      "column": 6
                    },
                    "end": {
                      "line": 124,
                      "column": 17
                    }
                  }
                },
                "right": {
                  "type": "BinaryExpression",
                  "operator": "===",
                  "left": {
                    "type": "Identifier",
                    "name": "id",
                    "range": [
                      4559,
                      4561
                    ],
                    "loc": {
                      "start": {
                        "line": 124,
                        "column": 21
                      },
                      "end": {
                        "line": 124,
                        "column": 23
                      }
                    }
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "undefined",
                    "range": [
                      4566,
                      4575
                    ],
                    "loc": {
                      "start": {
                        "line": 124,
                        "column": 28
                      },
                      "end": {
                        "line": 124,
                        "column": 37
                      }
                    }
                  },
                  "range": [
                    4559,
                    4575
                  ],
                  "loc": {
                    "start": {
                      "line": 124,
                      "column": 21
                    },
                    "end": {
                      "line": 124,
                      "column": 37
                    }
                  }
                },
                "range": [
                  4544,
                  4575
                ],
                "loc": {
                  "start": {
                    "line": 124,
                    "column": 6
                  },
                  "end": {
                    "line": 124,
                    "column": 37
                  }
                }
              },
              "consequent": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "ThrowStatement",
                    "argument": {
                      "type": "NewExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "Error",
                        "range": [
                          4593,
                          4598
                        ],
                        "loc": {
                          "start": {
                            "line": 125,
                            "column": 14
                          },
                          "end": {
                            "line": 125,
                            "column": 19
                          }
                        }
                      },
                      "arguments": [
                        {
                          "type": "TemplateLiteral",
                          "quasis": [
                            {
                              "type": "TemplateElement",
                              "value": {
                                "raw": "Cannot do a map-lookup with invalid key: \"",
                                "cooked": "Cannot do a map-lookup with invalid key: \""
                              },
                              "tail": false,
                              "range": [
                                4599,
                                4644
                              ],
                              "loc": {
                                "start": {
                                  "line": 125,
                                  "column": 20
                                },
                                "end": {
                                  "line": 125,
                                  "column": 65
                                }
                              }
                            },
                            {
                              "type": "TemplateElement",
                              "value": {
                                "raw": "\"",
                                "cooked": "\""
                              },
                              "tail": true,
                              "range": [
                                4646,
                                4649
                              ],
                              "loc": {
                                "start": {
                                  "line": 125,
                                  "column": 67
                                },
                                "end": {
                                  "line": 125,
                                  "column": 70
                                }
                              }
                            }
                          ],
                          "expressions": [
                            {
                              "type": "Identifier",
                              "name": "id",
                              "range": [
                                4644,
                                4646
                              ],
                              "loc": {
                                "start": {
                                  "line": 125,
                                  "column": 65
                                },
                                "end": {
                                  "line": 125,
                                  "column": 67
                                }
                              }
                            }
                          ],
                          "range": [
                            4599,
                            4649
                          ],
                          "loc": {
                            "start": {
                              "line": 125,
                              "column": 20
                            },
                            "end": {
                              "line": 125,
                              "column": 70
                            }
                          }
                        }
                      ],
                      "range": [
                        4589,
                        4650
                      ],
                      "loc": {
                        "start": {
                          "line": 125,
                          "column": 10
                        },
                        "end": {
                          "line": 125,
                          "column": 71
                        }
                      }
                    },
                    "range": [
                      4583,
                      4653
                    ],
                    "loc": {
                      "start": {
                        "line": 125,
                        "column": 4
                      },
                      "end": {
                        "line": 126,
                        "column": 2
                      }
                    }
                  }
                ],
                "range": [
                  4577,
                  4654
                ],
                "loc": {
                  "start": {
                    "line": 124,
                    "column": 39
                  },
                  "end": {
                    "line": 126,
                    "column": 3
                  }
                }
              },
              "alternate": null,
              "range": [
                4540,
                4654
              ],
              "loc": {
                "start": {
                  "line": 124,
                  "column": 2
                },
                "end": {
                  "line": 126,
                  "column": 3
                }
              }
            },
            {
              "type": "VariableDeclaration",
              "declarations": [
                {
                  "type": "VariableDeclarator",
                  "id": {
                    "type": "Identifier",
                    "name": "element",
                    "range": [
                      4663,
                      4670
                    ],
                    "loc": {
                      "start": {
                        "line": 127,
                        "column": 8
                      },
                      "end": {
                        "line": 127,
                        "column": 15
                      }
                    }
                  },
                  "init": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "map",
                        "range": [
                          4673,
                          4676
                        ],
                        "loc": {
                          "start": {
                            "line": 127,
                            "column": 18
                          },
                          "end": {
                            "line": 127,
                            "column": 21
                          }
                        }
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "get",
                        "range": [
                          4677,
                          4680
                        ],
                        "loc": {
                          "start": {
                            "line": 127,
                            "column": 22
                          },
                          "end": {
                            "line": 127,
                            "column": 25
                          }
                        }
                      },
                      "range": [
                        4673,
                        4680
                      ],
                      "loc": {
                        "start": {
                          "line": 127,
                          "column": 18
                        },
                        "end": {
                          "line": 127,
                          "column": 25
                        }
                      }
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "id",
                        "range": [
                          4681,
                          4683
                        ],
                        "loc": {
                          "start": {
                            "line": 127,
                            "column": 26
                          },
                          "end": {
                            "line": 127,
                            "column": 28
                          }
                        }
                      },
                      {
                        "type": "Literal",
                        "value": null,
                        "raw": "null",
                        "range": [
                          4685,
                          4689
                        ],
                        "loc": {
                          "start": {
                            "line": 127,
                            "column": 30
                          },
                          "end": {
                            "line": 127,
                            "column": 34
                          }
                        }
                      }
                    ],
                    "range": [
                      4673,
                      4690
                    ],
                    "loc": {
                      "start": {
                        "line": 127,
                        "column": 18
                      },
                      "end": {
                        "line": 127,
                        "column": 35
                      }
                    }
                  },
                  "range": [
                    4663,
                    4690
                  ],
                  "loc": {
                    "start": {
                      "line": 127,
                      "column": 8
                    },
                    "end": {
                      "line": 127,
                      "column": 35
                    }
                  }
                }
              ],
              "kind": "const",
              "range": [
                4657,
                4693
              ],
              "loc": {
                "start": {
                  "line": 127,
                  "column": 2
                },
                "end": {
                  "line": 128,
                  "column": 2
                }
              }
            },
            {
              "type": "IfStatement",
              "test": {
                "type": "BinaryExpression",
                "operator": "===",
                "left": {
                  "type": "Identifier",
                  "name": "element",
                  "range": [
                    4697,
                    4704
                  ],
                  "loc": {
                    "start": {
                      "line": 128,
                      "column": 6
                    },
                    "end": {
                      "line": 128,
                      "column": 13
                    }
                  }
                },
                "right": {
                  "type": "Literal",
                  "value": null,
                  "raw": "null",
                  "range": [
                    4709,
                    4713
                  ],
                  "loc": {
                    "start": {
                      "line": 128,
                      "column": 18
                    },
                    "end": {
                      "line": 128,
                      "column": 22
                    }
                  }
                },
                "range": [
                  4697,
                  4713
                ],
                "loc": {
                  "start": {
                    "line": 128,
                    "column": 6
                  },
                  "end": {
                    "line": 128,
                    "column": 22
                  }
                }
              },
              "consequent": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "ExpressionStatement",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "dispatch",
                        "range": [
                          4721,
                          4729
                        ],
                        "loc": {
                          "start": {
                            "line": 129,
                            "column": 4
                          },
                          "end": {
                            "line": 129,
                            "column": 12
                          }
                        }
                      },
                      "arguments": [
                        {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "dispatchAction",
                            "range": [
                              4730,
                              4744
                            ],
                            "loc": {
                              "start": {
                                "line": 129,
                                "column": 13
                              },
                              "end": {
                                "line": 129,
                                "column": 27
                              }
                            }
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "id",
                              "range": [
                                4745,
                                4747
                              ],
                              "loc": {
                                "start": {
                                  "line": 129,
                                  "column": 28
                                },
                                "end": {
                                  "line": 129,
                                  "column": 30
                                }
                              }
                            }
                          ],
                          "range": [
                            4730,
                            4748
                          ],
                          "loc": {
                            "start": {
                              "line": 129,
                              "column": 13
                            },
                            "end": {
                              "line": 129,
                              "column": 31
                            }
                          }
                        }
                      ],
                      "range": [
                        4721,
                        4749
                      ],
                      "loc": {
                        "start": {
                          "line": 129,
                          "column": 4
                        },
                        "end": {
                          "line": 129,
                          "column": 32
                        }
                      }
                    },
                    "range": [
                      4721,
                      4754
                    ],
                    "loc": {
                      "start": {
                        "line": 129,
                        "column": 4
                      },
                      "end": {
                        "line": 130,
                        "column": 4
                      }
                    }
                  },
                  {
                    "type": "ReturnStatement",
                    "argument": {
                      "type": "Literal",
                      "value": null,
                      "raw": "null",
                      "range": [
                        4761,
                        4765
                      ],
                      "loc": {
                        "start": {
                          "line": 130,
                          "column": 11
                        },
                        "end": {
                          "line": 130,
                          "column": 15
                        }
                      }
                    },
                    "range": [
                      4754,
                      4768
                    ],
                    "loc": {
                      "start": {
                        "line": 130,
                        "column": 4
                      },
                      "end": {
                        "line": 131,
                        "column": 2
                      }
                    }
                  }
                ],
                "range": [
                  4715,
                  4769
                ],
                "loc": {
                  "start": {
                    "line": 128,
                    "column": 24
                  },
                  "end": {
                    "line": 131,
                    "column": 3
                  }
                }
              },
              "alternate": null,
              "range": [
                4693,
                4769
              ],
              "loc": {
                "start": {
                  "line": 128,
                  "column": 2
                },
                "end": {
                  "line": 131,
                  "column": 3
                }
              }
            },
            {
              "type": "IfStatement",
              "test": {
                "type": "CallExpression",
                "callee": {
                  "type": "MemberExpression",
                  "computed": false,
                  "object": {
                    "type": "Identifier",
                    "name": "element",
                    "range": [
                      4776,
                      4783
                    ],
                    "loc": {
                      "start": {
                        "line": 132,
                        "column": 6
                      },
                      "end": {
                        "line": 132,
                        "column": 13
                      }
                    }
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "get",
                    "range": [
                      4784,
                      4787
                    ],
                    "loc": {
                      "start": {
                        "line": 132,
                        "column": 14
                      },
                      "end": {
                        "line": 132,
                        "column": 17
                      }
                    }
                  },
                  "range": [
                    4776,
                    4787
                  ],
                  "loc": {
                    "start": {
                      "line": 132,
                      "column": 6
                    },
                    "end": {
                      "line": 132,
                      "column": 17
                    }
                  }
                },
                "arguments": [
                  {
                    "type": "Literal",
                    "value": "isLoading",
                    "raw": "'isLoading'",
                    "range": [
                      4788,
                      4799
                    ],
                    "loc": {
                      "start": {
                        "line": 132,
                        "column": 18
                      },
                      "end": {
                        "line": 132,
                        "column": 29
                      }
                    }
                  },
                  {
                    "type": "Literal",
                    "value": true,
                    "raw": "true",
                    "range": [
                      4801,
                      4805
                    ],
                    "loc": {
                      "start": {
                        "line": 132,
                        "column": 31
                      },
                      "end": {
                        "line": 132,
                        "column": 35
                      }
                    }
                  }
                ],
                "range": [
                  4776,
                  4806
                ],
                "loc": {
                  "start": {
                    "line": 132,
                    "column": 6
                  },
                  "end": {
                    "line": 132,
                    "column": 36
                  }
                }
              },
              "consequent": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "ReturnStatement",
                    "argument": {
                      "type": "Literal",
                      "value": null,
                      "raw": "null",
                      "range": [
                        4821,
                        4825
                      ],
                      "loc": {
                        "start": {
                          "line": 133,
                          "column": 11
                        },
                        "end": {
                          "line": 133,
                          "column": 15
                        }
                      }
                    },
                    "range": [
                      4814,
                      4828
                    ],
                    "loc": {
                      "start": {
                        "line": 133,
                        "column": 4
                      },
                      "end": {
                        "line": 134,
                        "column": 2
                      }
                    }
                  }
                ],
                "range": [
                  4808,
                  4829
                ],
                "loc": {
                  "start": {
                    "line": 132,
                    "column": 38
                  },
                  "end": {
                    "line": 134,
                    "column": 3
                  }
                }
              },
              "alternate": null,
              "range": [
                4772,
                4829
              ],
              "loc": {
                "start": {
                  "line": 132,
                  "column": 2
                },
                "end": {
                  "line": 134,
                  "column": 3
                }
              }
            },
            {
              "type": "ReturnStatement",
              "argument": {
                "type": "Identifier",
                "name": "element",
                "range": [
                  4839,
                  4846
                ],
                "loc": {
                  "start": {
                    "line": 135,
                    "column": 9
                  },
                  "end": {
                    "line": 135,
                    "column": 16
                  }
                }
              },
              "range": [
                4832,
                4847
              ],
              "loc": {
                "start": {
                  "line": 135,
                  "column": 2
                },
                "end": {
                  "line": 136,
                  "column": 0
                }
              }
            }
          ],
          "range": [
            4536,
            4848
          ],
          "loc": {
            "start": {
              "line": 123,
              "column": 89
            },
            "end": {
              "line": 136,
              "column": 1
            }
          }
        },
        "generator": false,
        "expression": false,
        "range": [
          4454,
          4848
        ],
        "loc": {
          "start": {
            "line": 123,
            "column": 7
          },
          "end": {
            "line": 136,
            "column": 1
          }
        },
        "leadingComments": [
          {
            "type": "Block",
            "value": "*\n * Simple util to fetch data from a redux-api-map (which should always be built by {@link makeApiDataMapIsLoading},\n * {@link makeApiDataMapNewData} or {@link makeApiDataMapError}).\n *\n * This util will lookup the given id in the given map and return it if it exists.\n * If the entry is missing or loading, null is returned.\n * If the entry is missing (and not already loading), the given `dispatchAction` is dispatched and null is returned.\n *\n * Note that this util will still return the object even if it is an error-object (`apiError !== null`), so you need\n * to handle errors in your component.\n *\n * @param map {Immutable.Map} a map built by {@link makeApiDataMapIsLoading}, {@link makeApiDataMapNewData} or\n *   {@link makeApiDataMapError}\n * @param id {number} the entry-id to look for in the map\n * @param dispatchAction {function} the `redux.api...actions.<action>` to dispatch to load the entry if missing\n * @param dispatch {function} a `redux-thunk` dispatch, like `this.props.dispatch` from a connected React.Component.\n * @return {null|Immutable.Map} null if the entry is loading, or an ImmutableMap of the entry if it exists.\n ",
            "range": [
              3296,
              4446
            ],
            "loc": {
              "start": {
                "line": 105,
                "column": 0
              },
              "end": {
                "line": 122,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "Block",
            "value": "*\n * Used for the internal OrderedMap from {@link makeTypeMappedReduxMapFromApiData}, and should be used for other\n * type-lists from api.\n *\n * The only required fieldname on the api-data is `value`, which will be used as key in the ImmutableOrderedMap\n *\n * Builds a structure like this:\n *   ImmutableOrderedMap({\n *     <valueKey>: ImmutableMap({\n *       label: <some label>,\n *       description: <some description>,\n *       <otherfield>: <otherfieldkey>,\n *         ...\n *     })\n *   })\n *\n * from input-data formatted like this:\n *   [\n *     {\n *       \"value\": \"<valueKey>\",\n *       \"label\": \"<some label>\",\n *       \"description\": \"<some description>\",\n *       <otherfield>: <otherfieldkey>,\n *       ...\n *     }\n *   ]\n *\n * @param valueArray See input-data doc above\n * @param valueKey default to 'value' as in example above. can be set to any valid value. note that this is NOT\n *   validated or enforced in any way\n * @return {Immutable.OrderedMap<string, Immutable.Map<string, string>>} see example above\n ",
            "range": [
              4850,
              5881
            ],
            "loc": {
              "start": {
                "line": 138,
                "column": 0
              },
              "end": {
                "line": 169,
                "column": 3
              }
            }
          }
        ]
      },
      "specifiers": [],
      "source": null,
      "range": [
        4447,
        4848
      ],
      "loc": {
        "start": {
          "line": 123,
          "column": 0
        },
        "end": {
          "line": 136,
          "column": 1
        }
      },
      "leadingComments": [
        {
          "type": "Block",
          "value": "*\n * Simple util to fetch data from a redux-api-map (which should always be built by {@link makeApiDataMapIsLoading},\n * {@link makeApiDataMapNewData} or {@link makeApiDataMapError}).\n *\n * This util will lookup the given id in the given map and return it if it exists.\n * If the entry is missing or loading, null is returned.\n * If the entry is missing (and not already loading), the given `dispatchAction` is dispatched and null is returned.\n *\n * Note that this util will still return the object even if it is an error-object (`apiError !== null`), so you need\n * to handle errors in your component.\n *\n * @param map {Immutable.Map} a map built by {@link makeApiDataMapIsLoading}, {@link makeApiDataMapNewData} or\n *   {@link makeApiDataMapError}\n * @param id {number} the entry-id to look for in the map\n * @param dispatchAction {function} the `redux.api...actions.<action>` to dispatch to load the entry if missing\n * @param dispatch {function} a `redux-thunk` dispatch, like `this.props.dispatch` from a connected React.Component.\n * @return {null|Immutable.Map} null if the entry is loading, or an ImmutableMap of the entry if it exists.\n ",
          "range": [
            3296,
            4446
          ],
          "loc": {
            "start": {
              "line": 105,
              "column": 0
            },
            "end": {
              "line": 122,
              "column": 3
            }
          }
        }
      ],
      "trailingComments": [
        {
          "type": "Block",
          "value": "*\n * Used for the internal OrderedMap from {@link makeTypeMappedReduxMapFromApiData}, and should be used for other\n * type-lists from api.\n *\n * The only required fieldname on the api-data is `value`, which will be used as key in the ImmutableOrderedMap\n *\n * Builds a structure like this:\n *   ImmutableOrderedMap({\n *     <valueKey>: ImmutableMap({\n *       label: <some label>,\n *       description: <some description>,\n *       <otherfield>: <otherfieldkey>,\n *         ...\n *     })\n *   })\n *\n * from input-data formatted like this:\n *   [\n *     {\n *       \"value\": \"<valueKey>\",\n *       \"label\": \"<some label>\",\n *       \"description\": \"<some description>\",\n *       <otherfield>: <otherfieldkey>,\n *       ...\n *     }\n *   ]\n *\n * @param valueArray See input-data doc above\n * @param valueKey default to 'value' as in example above. can be set to any valid value. note that this is NOT\n *   validated or enforced in any way\n * @return {Immutable.OrderedMap<string, Immutable.Map<string, string>>} see example above\n ",
          "range": [
            4850,
            5881
          ],
          "loc": {
            "start": {
              "line": 138,
              "column": 0
            },
            "end": {
              "line": 169,
              "column": 3
            }
          }
        }
      ]
    },
    {
      "type": "ExportNamedDeclaration",
      "declaration": {
        "type": "FunctionDeclaration",
        "id": {
          "type": "Identifier",
          "name": "makeImmutableOrderedMapFromValueArray",
          "range": [
            5898,
            5935
          ],
          "loc": {
            "start": {
              "line": 170,
              "column": 16
            },
            "end": {
              "line": 170,
              "column": 53
            }
          }
        },
        "params": [
          {
            "type": "Identifier",
            "name": "valueArray",
            "range": [
              5937,
              5947
            ],
            "loc": {
              "start": {
                "line": 170,
                "column": 55
              },
              "end": {
                "line": 170,
                "column": 65
              }
            }
          },
          {
            "type": "AssignmentPattern",
            "left": {
              "type": "Identifier",
              "name": "valueKey",
              "range": [
                5949,
                5957
              ],
              "loc": {
                "start": {
                  "line": 170,
                  "column": 67
                },
                "end": {
                  "line": 170,
                  "column": 75
                }
              }
            },
            "right": {
              "type": "Literal",
              "value": "value",
              "raw": "'value'",
              "range": [
                5960,
                5967
              ],
              "loc": {
                "start": {
                  "line": 170,
                  "column": 78
                },
                "end": {
                  "line": 170,
                  "column": 85
                }
              }
            },
            "range": [
              5949,
              5967
            ],
            "loc": {
              "start": {
                "line": 170,
                "column": 67
              },
              "end": {
                "line": 170,
                "column": 85
              }
            }
          }
        ],
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "ReturnStatement",
              "argument": {
                "type": "CallExpression",
                "callee": {
                  "type": "MemberExpression",
                  "computed": false,
                  "object": {
                    "type": "NewExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "ImmutableOrderedMap",
                      "range": [
                        5984,
                        6003
                      ],
                      "loc": {
                        "start": {
                          "line": 171,
                          "column": 13
                        },
                        "end": {
                          "line": 171,
                          "column": 32
                        }
                      }
                    },
                    "arguments": [],
                    "range": [
                      5980,
                      6005
                    ],
                    "loc": {
                      "start": {
                        "line": 171,
                        "column": 9
                      },
                      "end": {
                        "line": 171,
                        "column": 34
                      }
                    }
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "withMutations",
                    "range": [
                      6011,
                      6024
                    ],
                    "loc": {
                      "start": {
                        "line": 172,
                        "column": 5
                      },
                      "end": {
                        "line": 172,
                        "column": 18
                      }
                    }
                  },
                  "range": [
                    5980,
                    6024
                  ],
                  "loc": {
                    "start": {
                      "line": 171,
                      "column": 9
                    },
                    "end": {
                      "line": 172,
                      "column": 18
                    }
                  }
                },
                "arguments": [
                  {
                    "type": "ArrowFunctionExpression",
                    "id": null,
                    "params": [
                      {
                        "type": "Identifier",
                        "name": "newValuesForNodeTypeMap",
                        "range": [
                          6026,
                          6049
                        ],
                        "loc": {
                          "start": {
                            "line": 172,
                            "column": 20
                          },
                          "end": {
                            "line": 172,
                            "column": 43
                          }
                        }
                      }
                    ],
                    "body": {
                      "type": "BlockStatement",
                      "body": [
                        {
                          "type": "ForOfStatement",
                          "left": {
                            "type": "VariableDeclaration",
                            "declarations": [
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "valueObject",
                                  "range": [
                                    6073,
                                    6084
                                  ],
                                  "loc": {
                                    "start": {
                                      "line": 173,
                                      "column": 17
                                    },
                                    "end": {
                                      "line": 173,
                                      "column": 28
                                    }
                                  }
                                },
                                "init": null,
                                "range": [
                                  6073,
                                  6084
                                ],
                                "loc": {
                                  "start": {
                                    "line": 173,
                                    "column": 17
                                  },
                                  "end": {
                                    "line": 173,
                                    "column": 28
                                  }
                                }
                              }
                            ],
                            "kind": "const",
                            "range": [
                              6067,
                              6084
                            ],
                            "loc": {
                              "start": {
                                "line": 173,
                                "column": 11
                              },
                              "end": {
                                "line": 173,
                                "column": 28
                              }
                            }
                          },
                          "right": {
                            "type": "Identifier",
                            "name": "valueArray",
                            "range": [
                              6088,
                              6098
                            ],
                            "loc": {
                              "start": {
                                "line": 173,
                                "column": 32
                              },
                              "end": {
                                "line": 173,
                                "column": 42
                              }
                            }
                          },
                          "body": {
                            "type": "BlockStatement",
                            "body": [
                              {
                                "type": "VariableDeclaration",
                                "declarations": [
                                  {
                                    "type": "VariableDeclarator",
                                    "id": {
                                      "type": "Identifier",
                                      "name": "value",
                                      "range": [
                                        6238,
                                        6243
                                      ],
                                      "loc": {
                                        "start": {
                                          "line": 176,
                                          "column": 14
                                        },
                                        "end": {
                                          "line": 176,
                                          "column": 19
                                        }
                                      }
                                    },
                                    "init": {
                                      "type": "MemberExpression",
                                      "computed": true,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "valueObject",
                                        "range": [
                                          6246,
                                          6257
                                        ],
                                        "loc": {
                                          "start": {
                                            "line": 176,
                                            "column": 22
                                          },
                                          "end": {
                                            "line": 176,
                                            "column": 33
                                          }
                                        }
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "valueKey",
                                        "range": [
                                          6258,
                                          6266
                                        ],
                                        "loc": {
                                          "start": {
                                            "line": 176,
                                            "column": 34
                                          },
                                          "end": {
                                            "line": 176,
                                            "column": 42
                                          }
                                        }
                                      },
                                      "range": [
                                        6246,
                                        6267
                                      ],
                                      "loc": {
                                        "start": {
                                          "line": 176,
                                          "column": 22
                                        },
                                        "end": {
                                          "line": 176,
                                          "column": 43
                                        }
                                      }
                                    },
                                    "range": [
                                      6238,
                                      6267
                                    ],
                                    "loc": {
                                      "start": {
                                        "line": 176,
                                        "column": 14
                                      },
                                      "end": {
                                        "line": 176,
                                        "column": 43
                                      }
                                    }
                                  }
                                ],
                                "kind": "const",
                                "range": [
                                  6232,
                                  6276
                                ],
                                "loc": {
                                  "start": {
                                    "line": 176,
                                    "column": 8
                                  },
                                  "end": {
                                    "line": 177,
                                    "column": 8
                                  }
                                },
                                "leadingComments": [
                                  {
                                    "type": "Line",
                                    "value": " const {value, ...object} = valueObject",
                                    "range": [
                                      6110,
                                      6151
                                    ],
                                    "loc": {
                                      "start": {
                                        "line": 174,
                                        "column": 8
                                      },
                                      "end": {
                                        "line": 174,
                                        "column": 49
                                      }
                                    }
                                  },
                                  {
                                    "type": "Line",
                                    "value": " newValuesForNodeTypeMap.set(value, new ImmutableMap(object))",
                                    "range": [
                                      6160,
                                      6223
                                    ],
                                    "loc": {
                                      "start": {
                                        "line": 175,
                                        "column": 8
                                      },
                                      "end": {
                                        "line": 175,
                                        "column": 71
                                      }
                                    }
                                  }
                                ]
                              },
                              {
                                "type": "ExpressionStatement",
                                "expression": {
                                  "type": "UnaryExpression",
                                  "operator": "delete",
                                  "argument": {
                                    "type": "MemberExpression",
                                    "computed": true,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "valueObject",
                                      "range": [
                                        6283,
                                        6294
                                      ],
                                      "loc": {
                                        "start": {
                                          "line": 177,
                                          "column": 15
                                        },
                                        "end": {
                                          "line": 177,
                                          "column": 26
                                        }
                                      }
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "valueKey",
                                      "range": [
                                        6295,
                                        6303
                                      ],
                                      "loc": {
                                        "start": {
                                          "line": 177,
                                          "column": 27
                                        },
                                        "end": {
                                          "line": 177,
                                          "column": 35
                                        }
                                      }
                                    },
                                    "range": [
                                      6283,
                                      6304
                                    ],
                                    "loc": {
                                      "start": {
                                        "line": 177,
                                        "column": 15
                                      },
                                      "end": {
                                        "line": 177,
                                        "column": 36
                                      }
                                    }
                                  },
                                  "prefix": true,
                                  "range": [
                                    6276,
                                    6304
                                  ],
                                  "loc": {
                                    "start": {
                                      "line": 177,
                                      "column": 8
                                    },
                                    "end": {
                                      "line": 177,
                                      "column": 36
                                    }
                                  }
                                },
                                "range": [
                                  6276,
                                  6313
                                ],
                                "loc": {
                                  "start": {
                                    "line": 177,
                                    "column": 8
                                  },
                                  "end": {
                                    "line": 178,
                                    "column": 8
                                  }
                                }
                              },
                              {
                                "type": "ExpressionStatement",
                                "expression": {
                                  "type": "CallExpression",
                                  "callee": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "newValuesForNodeTypeMap",
                                      "range": [
                                        6313,
                                        6336
                                      ],
                                      "loc": {
                                        "start": {
                                          "line": 178,
                                          "column": 8
                                        },
                                        "end": {
                                          "line": 178,
                                          "column": 31
                                        }
                                      }
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "set",
                                      "range": [
                                        6337,
                                        6340
                                      ],
                                      "loc": {
                                        "start": {
                                          "line": 178,
                                          "column": 32
                                        },
                                        "end": {
                                          "line": 178,
                                          "column": 35
                                        }
                                      }
                                    },
                                    "range": [
                                      6313,
                                      6340
                                    ],
                                    "loc": {
                                      "start": {
                                        "line": 178,
                                        "column": 8
                                      },
                                      "end": {
                                        "line": 178,
                                        "column": 35
                                      }
                                    }
                                  },
                                  "arguments": [
                                    {
                                      "type": "Identifier",
                                      "name": "value",
                                      "range": [
                                        6341,
                                        6346
                                      ],
                                      "loc": {
                                        "start": {
                                          "line": 178,
                                          "column": 36
                                        },
                                        "end": {
                                          "line": 178,
                                          "column": 41
                                        }
                                      }
                                    },
                                    {
                                      "type": "NewExpression",
                                      "callee": {
                                        "type": "Identifier",
                                        "name": "ImmutableMap",
                                        "range": [
                                          6352,
                                          6364
                                        ],
                                        "loc": {
                                          "start": {
                                            "line": 178,
                                            "column": 47
                                          },
                                          "end": {
                                            "line": 178,
                                            "column": 59
                                          }
                                        }
                                      },
                                      "arguments": [
                                        {
                                          "type": "Identifier",
                                          "name": "valueObject",
                                          "range": [
                                            6365,
                                            6376
                                          ],
                                          "loc": {
                                            "start": {
                                              "line": 178,
                                              "column": 60
                                            },
                                            "end": {
                                              "line": 178,
                                              "column": 71
                                            }
                                          }
                                        }
                                      ],
                                      "range": [
                                        6348,
                                        6377
                                      ],
                                      "loc": {
                                        "start": {
                                          "line": 178,
                                          "column": 43
                                        },
                                        "end": {
                                          "line": 178,
                                          "column": 72
                                        }
                                      }
                                    }
                                  ],
                                  "range": [
                                    6313,
                                    6378
                                  ],
                                  "loc": {
                                    "start": {
                                      "line": 178,
                                      "column": 8
                                    },
                                    "end": {
                                      "line": 178,
                                      "column": 73
                                    }
                                  }
                                },
                                "range": [
                                  6313,
                                  6385
                                ],
                                "loc": {
                                  "start": {
                                    "line": 178,
                                    "column": 8
                                  },
                                  "end": {
                                    "line": 179,
                                    "column": 6
                                  }
                                }
                              }
                            ],
                            "range": [
                              6100,
                              6386
                            ],
                            "loc": {
                              "start": {
                                "line": 173,
                                "column": 44
                              },
                              "end": {
                                "line": 179,
                                "column": 7
                              }
                            }
                          },
                          "range": [
                            6062,
                            6386
                          ],
                          "loc": {
                            "start": {
                              "line": 173,
                              "column": 6
                            },
                            "end": {
                              "line": 179,
                              "column": 7
                            }
                          }
                        }
                      ],
                      "range": [
                        6054,
                        6392
                      ],
                      "loc": {
                        "start": {
                          "line": 172,
                          "column": 48
                        },
                        "end": {
                          "line": 180,
                          "column": 5
                        }
                      }
                    },
                    "generator": false,
                    "expression": false,
                    "range": [
                      6025,
                      6392
                    ],
                    "loc": {
                      "start": {
                        "line": 172,
                        "column": 19
                      },
                      "end": {
                        "line": 180,
                        "column": 5
                      }
                    }
                  }
                ],
                "range": [
                  5980,
                  6393
                ],
                "loc": {
                  "start": {
                    "line": 171,
                    "column": 9
                  },
                  "end": {
                    "line": 180,
                    "column": 6
                  }
                }
              },
              "range": [
                5973,
                6394
              ],
              "loc": {
                "start": {
                  "line": 171,
                  "column": 2
                },
                "end": {
                  "line": 181,
                  "column": 0
                }
              }
            }
          ],
          "range": [
            5969,
            6395
          ],
          "loc": {
            "start": {
              "line": 170,
              "column": 87
            },
            "end": {
              "line": 181,
              "column": 1
            }
          }
        },
        "generator": false,
        "expression": false,
        "range": [
          5889,
          6395
        ],
        "loc": {
          "start": {
            "line": 170,
            "column": 7
          },
          "end": {
            "line": 181,
            "column": 1
          }
        },
        "leadingComments": [
          {
            "type": "Block",
            "value": "*\n * Used for the internal OrderedMap from {@link makeTypeMappedReduxMapFromApiData}, and should be used for other\n * type-lists from api.\n *\n * The only required fieldname on the api-data is `value`, which will be used as key in the ImmutableOrderedMap\n *\n * Builds a structure like this:\n *   ImmutableOrderedMap({\n *     <valueKey>: ImmutableMap({\n *       label: <some label>,\n *       description: <some description>,\n *       <otherfield>: <otherfieldkey>,\n *         ...\n *     })\n *   })\n *\n * from input-data formatted like this:\n *   [\n *     {\n *       \"value\": \"<valueKey>\",\n *       \"label\": \"<some label>\",\n *       \"description\": \"<some description>\",\n *       <otherfield>: <otherfieldkey>,\n *       ...\n *     }\n *   ]\n *\n * @param valueArray See input-data doc above\n * @param valueKey default to 'value' as in example above. can be set to any valid value. note that this is NOT\n *   validated or enforced in any way\n * @return {Immutable.OrderedMap<string, Immutable.Map<string, string>>} see example above\n ",
            "range": [
              4850,
              5881
            ],
            "loc": {
              "start": {
                "line": 138,
                "column": 0
              },
              "end": {
                "line": 169,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "Block",
            "value": "*\n * Used for apis like nodePaymentSubscriptionTypes and nodeMembershipTypes.\n *\n * Builds a structure like this:\n * ImmutableMap({\n *  <nodeType>: ImmutableOrderedMap({\n *     <valueKey>: ImmutableMap({\n *       label: <some label>,\n *       description: <some description>,\n *       <otherfield>: <otherfieldkey>,\n *         ...\n *     })\n *   })\n * })\n *\n * Expects apiResponseBodydata to be formatted like this:\n *  {\n *     \"<nodeType>\": [\n *       {\n *         \"value\": \"<valueKey>\",\n *         \"label\": \"<some label>\",\n *         \"description\": \"<some description>\",\n *         <otherfield>: <otherfieldkey>,\n *         ...\n *       }\n *     ]\n *  }\n *\n * @param apiResponseBodydata `bodydata` from a response. This response has to be formatted correctly.\n * @return {Immutable.Map<string, Immutable.OrderedMap<string, Immutable.Map<string, string>>>} See example in doc above\n ",
            "range": [
              6397,
              7286
            ],
            "loc": {
              "start": {
                "line": 183,
                "column": 0
              },
              "end": {
                "line": 213,
                "column": 3
              }
            }
          }
        ]
      },
      "specifiers": [],
      "source": null,
      "range": [
        5882,
        6395
      ],
      "loc": {
        "start": {
          "line": 170,
          "column": 0
        },
        "end": {
          "line": 181,
          "column": 1
        }
      },
      "leadingComments": [
        {
          "type": "Block",
          "value": "*\n * Used for the internal OrderedMap from {@link makeTypeMappedReduxMapFromApiData}, and should be used for other\n * type-lists from api.\n *\n * The only required fieldname on the api-data is `value`, which will be used as key in the ImmutableOrderedMap\n *\n * Builds a structure like this:\n *   ImmutableOrderedMap({\n *     <valueKey>: ImmutableMap({\n *       label: <some label>,\n *       description: <some description>,\n *       <otherfield>: <otherfieldkey>,\n *         ...\n *     })\n *   })\n *\n * from input-data formatted like this:\n *   [\n *     {\n *       \"value\": \"<valueKey>\",\n *       \"label\": \"<some label>\",\n *       \"description\": \"<some description>\",\n *       <otherfield>: <otherfieldkey>,\n *       ...\n *     }\n *   ]\n *\n * @param valueArray See input-data doc above\n * @param valueKey default to 'value' as in example above. can be set to any valid value. note that this is NOT\n *   validated or enforced in any way\n * @return {Immutable.OrderedMap<string, Immutable.Map<string, string>>} see example above\n ",
          "range": [
            4850,
            5881
          ],
          "loc": {
            "start": {
              "line": 138,
              "column": 0
            },
            "end": {
              "line": 169,
              "column": 3
            }
          }
        }
      ],
      "trailingComments": [
        {
          "type": "Block",
          "value": "*\n * Used for apis like nodePaymentSubscriptionTypes and nodeMembershipTypes.\n *\n * Builds a structure like this:\n * ImmutableMap({\n *  <nodeType>: ImmutableOrderedMap({\n *     <valueKey>: ImmutableMap({\n *       label: <some label>,\n *       description: <some description>,\n *       <otherfield>: <otherfieldkey>,\n *         ...\n *     })\n *   })\n * })\n *\n * Expects apiResponseBodydata to be formatted like this:\n *  {\n *     \"<nodeType>\": [\n *       {\n *         \"value\": \"<valueKey>\",\n *         \"label\": \"<some label>\",\n *         \"description\": \"<some description>\",\n *         <otherfield>: <otherfieldkey>,\n *         ...\n *       }\n *     ]\n *  }\n *\n * @param apiResponseBodydata `bodydata` from a response. This response has to be formatted correctly.\n * @return {Immutable.Map<string, Immutable.OrderedMap<string, Immutable.Map<string, string>>>} See example in doc above\n ",
          "range": [
            6397,
            7286
          ],
          "loc": {
            "start": {
              "line": 183,
              "column": 0
            },
            "end": {
              "line": 213,
              "column": 3
            }
          }
        }
      ]
    },
    {
      "type": "ExportNamedDeclaration",
      "declaration": {
        "type": "FunctionDeclaration",
        "id": {
          "type": "Identifier",
          "name": "makeTypeMappedReduxMapFromApiData",
          "range": [
            7303,
            7336
          ],
          "loc": {
            "start": {
              "line": 214,
              "column": 16
            },
            "end": {
              "line": 214,
              "column": 49
            }
          }
        },
        "params": [
          {
            "type": "Identifier",
            "name": "apiResponseBodydata",
            "range": [
              7338,
              7357
            ],
            "loc": {
              "start": {
                "line": 214,
                "column": 51
              },
              "end": {
                "line": 214,
                "column": 70
              }
            }
          }
        ],
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "ReturnStatement",
              "argument": {
                "type": "CallExpression",
                "callee": {
                  "type": "MemberExpression",
                  "computed": false,
                  "object": {
                    "type": "NewExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "ImmutableMap",
                      "range": [
                        7374,
                        7386
                      ],
                      "loc": {
                        "start": {
                          "line": 215,
                          "column": 13
                        },
                        "end": {
                          "line": 215,
                          "column": 25
                        }
                      }
                    },
                    "arguments": [],
                    "range": [
                      7370,
                      7388
                    ],
                    "loc": {
                      "start": {
                        "line": 215,
                        "column": 9
                      },
                      "end": {
                        "line": 215,
                        "column": 27
                      }
                    }
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "withMutations",
                    "range": [
                      7389,
                      7402
                    ],
                    "loc": {
                      "start": {
                        "line": 215,
                        "column": 28
                      },
                      "end": {
                        "line": 215,
                        "column": 41
                      }
                    }
                  },
                  "range": [
                    7370,
                    7402
                  ],
                  "loc": {
                    "start": {
                      "line": 215,
                      "column": 9
                    },
                    "end": {
                      "line": 215,
                      "column": 41
                    }
                  }
                },
                "arguments": [
                  {
                    "type": "ArrowFunctionExpression",
                    "id": null,
                    "params": [
                      {
                        "type": "Identifier",
                        "name": "data",
                        "range": [
                          7404,
                          7408
                        ],
                        "loc": {
                          "start": {
                            "line": 215,
                            "column": 43
                          },
                          "end": {
                            "line": 215,
                            "column": 47
                          }
                        }
                      }
                    ],
                    "body": {
                      "type": "BlockStatement",
                      "body": [
                        {
                          "type": "ForOfStatement",
                          "left": {
                            "type": "VariableDeclaration",
                            "declarations": [
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "ArrayPattern",
                                  "elements": [
                                    {
                                      "type": "Identifier",
                                      "name": "typeKey",
                                      "range": [
                                        7431,
                                        7438
                                      ],
                                      "loc": {
                                        "start": {
                                          "line": 216,
                                          "column": 16
                                        },
                                        "end": {
                                          "line": 216,
                                          "column": 23
                                        }
                                      }
                                    },
                                    {
                                      "type": "Identifier",
                                      "name": "valuesForTypeKey",
                                      "range": [
                                        7440,
                                        7456
                                      ],
                                      "loc": {
                                        "start": {
                                          "line": 216,
                                          "column": 25
                                        },
                                        "end": {
                                          "line": 216,
                                          "column": 41
                                        }
                                      }
                                    }
                                  ],
                                  "range": [
                                    7430,
                                    7457
                                  ],
                                  "loc": {
                                    "start": {
                                      "line": 216,
                                      "column": 15
                                    },
                                    "end": {
                                      "line": 216,
                                      "column": 42
                                    }
                                  }
                                },
                                "init": null,
                                "range": [
                                  7430,
                                  7457
                                ],
                                "loc": {
                                  "start": {
                                    "line": 216,
                                    "column": 15
                                  },
                                  "end": {
                                    "line": 216,
                                    "column": 42
                                  }
                                }
                              }
                            ],
                            "kind": "const",
                            "range": [
                              7424,
                              7457
                            ],
                            "loc": {
                              "start": {
                                "line": 216,
                                "column": 9
                              },
                              "end": {
                                "line": 216,
                                "column": 42
                              }
                            }
                          },
                          "right": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "Object",
                                "range": [
                                  7461,
                                  7467
                                ],
                                "loc": {
                                  "start": {
                                    "line": 216,
                                    "column": 46
                                  },
                                  "end": {
                                    "line": 216,
                                    "column": 52
                                  }
                                }
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "entries",
                                "range": [
                                  7468,
                                  7475
                                ],
                                "loc": {
                                  "start": {
                                    "line": 216,
                                    "column": 53
                                  },
                                  "end": {
                                    "line": 216,
                                    "column": 60
                                  }
                                }
                              },
                              "range": [
                                7461,
                                7475
                              ],
                              "loc": {
                                "start": {
                                  "line": 216,
                                  "column": 46
                                },
                                "end": {
                                  "line": 216,
                                  "column": 60
                                }
                              }
                            },
                            "arguments": [
                              {
                                "type": "Identifier",
                                "name": "apiResponseBodydata",
                                "range": [
                                  7476,
                                  7495
                                ],
                                "loc": {
                                  "start": {
                                    "line": 216,
                                    "column": 61
                                  },
                                  "end": {
                                    "line": 216,
                                    "column": 80
                                  }
                                }
                              }
                            ],
                            "range": [
                              7461,
                              7496
                            ],
                            "loc": {
                              "start": {
                                "line": 216,
                                "column": 46
                              },
                              "end": {
                                "line": 216,
                                "column": 81
                              }
                            }
                          },
                          "body": {
                            "type": "BlockStatement",
                            "body": [
                              {
                                "type": "ExpressionStatement",
                                "expression": {
                                  "type": "CallExpression",
                                  "callee": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "data",
                                      "range": [
                                        7506,
                                        7510
                                      ],
                                      "loc": {
                                        "start": {
                                          "line": 217,
                                          "column": 6
                                        },
                                        "end": {
                                          "line": 217,
                                          "column": 10
                                        }
                                      }
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "set",
                                      "range": [
                                        7511,
                                        7514
                                      ],
                                      "loc": {
                                        "start": {
                                          "line": 217,
                                          "column": 11
                                        },
                                        "end": {
                                          "line": 217,
                                          "column": 14
                                        }
                                      }
                                    },
                                    "range": [
                                      7506,
                                      7514
                                    ],
                                    "loc": {
                                      "start": {
                                        "line": 217,
                                        "column": 6
                                      },
                                      "end": {
                                        "line": 217,
                                        "column": 14
                                      }
                                    }
                                  },
                                  "arguments": [
                                    {
                                      "type": "Identifier",
                                      "name": "typeKey",
                                      "range": [
                                        7515,
                                        7522
                                      ],
                                      "loc": {
                                        "start": {
                                          "line": 217,
                                          "column": 15
                                        },
                                        "end": {
                                          "line": 217,
                                          "column": 22
                                        }
                                      }
                                    },
                                    {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "Identifier",
                                        "name": "makeImmutableOrderedMapFromValueArray",
                                        "range": [
                                          7524,
                                          7561
                                        ],
                                        "loc": {
                                          "start": {
                                            "line": 217,
                                            "column": 24
                                          },
                                          "end": {
                                            "line": 217,
                                            "column": 61
                                          }
                                        }
                                      },
                                      "arguments": [
                                        {
                                          "type": "Identifier",
                                          "name": "valuesForTypeKey",
                                          "range": [
                                            7562,
                                            7578
                                          ],
                                          "loc": {
                                            "start": {
                                              "line": 217,
                                              "column": 62
                                            },
                                            "end": {
                                              "line": 217,
                                              "column": 78
                                            }
                                          }
                                        }
                                      ],
                                      "range": [
                                        7524,
                                        7579
                                      ],
                                      "loc": {
                                        "start": {
                                          "line": 217,
                                          "column": 24
                                        },
                                        "end": {
                                          "line": 217,
                                          "column": 79
                                        }
                                      }
                                    }
                                  ],
                                  "range": [
                                    7506,
                                    7580
                                  ],
                                  "loc": {
                                    "start": {
                                      "line": 217,
                                      "column": 6
                                    },
                                    "end": {
                                      "line": 217,
                                      "column": 80
                                    }
                                  }
                                },
                                "range": [
                                  7506,
                                  7585
                                ],
                                "loc": {
                                  "start": {
                                    "line": 217,
                                    "column": 6
                                  },
                                  "end": {
                                    "line": 218,
                                    "column": 4
                                  }
                                }
                              }
                            ],
                            "range": [
                              7498,
                              7586
                            ],
                            "loc": {
                              "start": {
                                "line": 216,
                                "column": 83
                              },
                              "end": {
                                "line": 218,
                                "column": 5
                              }
                            }
                          },
                          "range": [
                            7419,
                            7586
                          ],
                          "loc": {
                            "start": {
                              "line": 216,
                              "column": 4
                            },
                            "end": {
                              "line": 218,
                              "column": 5
                            }
                          }
                        }
                      ],
                      "range": [
                        7413,
                        7590
                      ],
                      "loc": {
                        "start": {
                          "line": 215,
                          "column": 52
                        },
                        "end": {
                          "line": 219,
                          "column": 3
                        }
                      }
                    },
                    "generator": false,
                    "expression": false,
                    "range": [
                      7403,
                      7590
                    ],
                    "loc": {
                      "start": {
                        "line": 215,
                        "column": 42
                      },
                      "end": {
                        "line": 219,
                        "column": 3
                      }
                    }
                  }
                ],
                "range": [
                  7370,
                  7591
                ],
                "loc": {
                  "start": {
                    "line": 215,
                    "column": 9
                  },
                  "end": {
                    "line": 219,
                    "column": 4
                  }
                }
              },
              "range": [
                7363,
                7592
              ],
              "loc": {
                "start": {
                  "line": 215,
                  "column": 2
                },
                "end": {
                  "line": 220,
                  "column": 0
                }
              }
            }
          ],
          "range": [
            7359,
            7593
          ],
          "loc": {
            "start": {
              "line": 214,
              "column": 72
            },
            "end": {
              "line": 220,
              "column": 1
            }
          }
        },
        "generator": false,
        "expression": false,
        "range": [
          7294,
          7593
        ],
        "loc": {
          "start": {
            "line": 214,
            "column": 7
          },
          "end": {
            "line": 220,
            "column": 1
          }
        },
        "leadingComments": [
          {
            "type": "Block",
            "value": "*\n * Used for apis like nodePaymentSubscriptionTypes and nodeMembershipTypes.\n *\n * Builds a structure like this:\n * ImmutableMap({\n *  <nodeType>: ImmutableOrderedMap({\n *     <valueKey>: ImmutableMap({\n *       label: <some label>,\n *       description: <some description>,\n *       <otherfield>: <otherfieldkey>,\n *         ...\n *     })\n *   })\n * })\n *\n * Expects apiResponseBodydata to be formatted like this:\n *  {\n *     \"<nodeType>\": [\n *       {\n *         \"value\": \"<valueKey>\",\n *         \"label\": \"<some label>\",\n *         \"description\": \"<some description>\",\n *         <otherfield>: <otherfieldkey>,\n *         ...\n *       }\n *     ]\n *  }\n *\n * @param apiResponseBodydata `bodydata` from a response. This response has to be formatted correctly.\n * @return {Immutable.Map<string, Immutable.OrderedMap<string, Immutable.Map<string, string>>>} See example in doc above\n ",
            "range": [
              6397,
              7286
            ],
            "loc": {
              "start": {
                "line": 183,
                "column": 0
              },
              "end": {
                "line": 213,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "Block",
            "value": "*\n * The default key for maps built by {@link makeTypeMappedReduxMapFromApiData}.\n * This should be the same key used by the server-side apis, so do not change it unless you know what you are doing.\n *\n * @type {string}\n ",
            "range": [
              7595,
              7820
            ],
            "loc": {
              "start": {
                "line": 222,
                "column": 0
              },
              "end": {
                "line": 227,
                "column": 3
              }
            }
          }
        ]
      },
      "specifiers": [],
      "source": null,
      "range": [
        7287,
        7593
      ],
      "loc": {
        "start": {
          "line": 214,
          "column": 0
        },
        "end": {
          "line": 220,
          "column": 1
        }
      },
      "leadingComments": [
        {
          "type": "Block",
          "value": "*\n * Used for apis like nodePaymentSubscriptionTypes and nodeMembershipTypes.\n *\n * Builds a structure like this:\n * ImmutableMap({\n *  <nodeType>: ImmutableOrderedMap({\n *     <valueKey>: ImmutableMap({\n *       label: <some label>,\n *       description: <some description>,\n *       <otherfield>: <otherfieldkey>,\n *         ...\n *     })\n *   })\n * })\n *\n * Expects apiResponseBodydata to be formatted like this:\n *  {\n *     \"<nodeType>\": [\n *       {\n *         \"value\": \"<valueKey>\",\n *         \"label\": \"<some label>\",\n *         \"description\": \"<some description>\",\n *         <otherfield>: <otherfieldkey>,\n *         ...\n *       }\n *     ]\n *  }\n *\n * @param apiResponseBodydata `bodydata` from a response. This response has to be formatted correctly.\n * @return {Immutable.Map<string, Immutable.OrderedMap<string, Immutable.Map<string, string>>>} See example in doc above\n ",
          "range": [
            6397,
            7286
          ],
          "loc": {
            "start": {
              "line": 183,
              "column": 0
            },
            "end": {
              "line": 213,
              "column": 3
            }
          }
        }
      ],
      "trailingComments": [
        {
          "type": "Block",
          "value": "*\n * The default key for maps built by {@link makeTypeMappedReduxMapFromApiData}.\n * This should be the same key used by the server-side apis, so do not change it unless you know what you are doing.\n *\n * @type {string}\n ",
          "range": [
            7595,
            7820
          ],
          "loc": {
            "start": {
              "line": 222,
              "column": 0
            },
            "end": {
              "line": 227,
              "column": 3
            }
          }
        }
      ]
    },
    {
      "type": "ExportNamedDeclaration",
      "declaration": {
        "type": "VariableDeclaration",
        "declarations": [
          {
            "type": "VariableDeclarator",
            "id": {
              "type": "Identifier",
              "name": "TYPE_MAPPED_REDUX_MAP_DEFAULT_KEY",
              "range": [
                7834,
                7867
              ],
              "loc": {
                "start": {
                  "line": 228,
                  "column": 13
                },
                "end": {
                  "line": 228,
                  "column": 46
                }
              }
            },
            "init": {
              "type": "Literal",
              "value": "__default__",
              "raw": "'__default__'",
              "range": [
                7870,
                7883
              ],
              "loc": {
                "start": {
                  "line": 228,
                  "column": 49
                },
                "end": {
                  "line": 228,
                  "column": 62
                }
              }
            },
            "range": [
              7834,
              7883
            ],
            "loc": {
              "start": {
                "line": 228,
                "column": 13
              },
              "end": {
                "line": 228,
                "column": 62
              }
            },
            "trailingComments": [
              {
                "type": "Block",
                "value": "*\n * Used to fetch the ImmutableOrderedMap of values for a <typeKey> in a structure built by\n * {@link makeTypeMappedReduxMapFromApiData}. See its documentation for structure.\n *\n * If the given <typeKey> is not present in the map, then the entry referenced by\n * {@link TYPE_MAPPED_REDUX_MAP_DEFAULT_KEY} will be returned instead.\n *\n * @param typeMappedReduxMap a map built by {@link makeTypeMappedReduxMapFromApiData}\n * @param typeKey the <typeKey> to look for in the map\n * @param fallbackToDefault if true return default-data if no data for typekey is present. If false, return null.\n * @return {Immutable.OrderedMap<string, Immutable.Map<string, string>>} The ImmutableOrderedMap referenced by the\n *   given <typeKey>\n ",
                "range": [
                  7885,
                  8616
                ],
                "loc": {
                  "start": {
                    "line": 230,
                    "column": 0
                  },
                  "end": {
                    "line": 242,
                    "column": 3
                  }
                }
              }
            ]
          }
        ],
        "kind": "const",
        "range": [
          7828,
          8617
        ],
        "loc": {
          "start": {
            "line": 228,
            "column": 7
          },
          "end": {
            "line": 243,
            "column": 0
          }
        },
        "leadingComments": [
          {
            "type": "Block",
            "value": "*\n * The default key for maps built by {@link makeTypeMappedReduxMapFromApiData}.\n * This should be the same key used by the server-side apis, so do not change it unless you know what you are doing.\n *\n * @type {string}\n ",
            "range": [
              7595,
              7820
            ],
            "loc": {
              "start": {
                "line": 222,
                "column": 0
              },
              "end": {
                "line": 227,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": []
      },
      "specifiers": [],
      "source": null,
      "range": [
        7821,
        8617
      ],
      "loc": {
        "start": {
          "line": 228,
          "column": 0
        },
        "end": {
          "line": 243,
          "column": 0
        }
      },
      "leadingComments": [
        {
          "type": "Block",
          "value": "*\n * The default key for maps built by {@link makeTypeMappedReduxMapFromApiData}.\n * This should be the same key used by the server-side apis, so do not change it unless you know what you are doing.\n *\n * @type {string}\n ",
          "range": [
            7595,
            7820
          ],
          "loc": {
            "start": {
              "line": 222,
              "column": 0
            },
            "end": {
              "line": 227,
              "column": 3
            }
          }
        }
      ]
    },
    {
      "type": "ExportNamedDeclaration",
      "declaration": {
        "type": "FunctionDeclaration",
        "id": {
          "type": "Identifier",
          "name": "getValuesFromTypeMappedReduxMap",
          "range": [
            8633,
            8664
          ],
          "loc": {
            "start": {
              "line": 243,
              "column": 16
            },
            "end": {
              "line": 243,
              "column": 47
            }
          }
        },
        "params": [
          {
            "type": "Identifier",
            "name": "typeMappedReduxMap",
            "range": [
              8666,
              8684
            ],
            "loc": {
              "start": {
                "line": 243,
                "column": 49
              },
              "end": {
                "line": 243,
                "column": 67
              }
            }
          },
          {
            "type": "Identifier",
            "name": "typeKey",
            "range": [
              8686,
              8693
            ],
            "loc": {
              "start": {
                "line": 243,
                "column": 69
              },
              "end": {
                "line": 243,
                "column": 76
              }
            }
          },
          {
            "type": "AssignmentPattern",
            "left": {
              "type": "Identifier",
              "name": "fallbackToDefault",
              "range": [
                8695,
                8712
              ],
              "loc": {
                "start": {
                  "line": 243,
                  "column": 78
                },
                "end": {
                  "line": 243,
                  "column": 95
                }
              }
            },
            "right": {
              "type": "Literal",
              "value": true,
              "raw": "true",
              "range": [
                8715,
                8719
              ],
              "loc": {
                "start": {
                  "line": 243,
                  "column": 98
                },
                "end": {
                  "line": 243,
                  "column": 102
                }
              }
            },
            "range": [
              8695,
              8719
            ],
            "loc": {
              "start": {
                "line": 243,
                "column": 78
              },
              "end": {
                "line": 243,
                "column": 102
              }
            }
          }
        ],
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "IfStatement",
              "test": {
                "type": "CallExpression",
                "callee": {
                  "type": "MemberExpression",
                  "computed": false,
                  "object": {
                    "type": "Identifier",
                    "name": "typeMappedReduxMap",
                    "range": [
                      8729,
                      8747
                    ],
                    "loc": {
                      "start": {
                        "line": 244,
                        "column": 6
                      },
                      "end": {
                        "line": 244,
                        "column": 24
                      }
                    }
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "get",
                    "range": [
                      8748,
                      8751
                    ],
                    "loc": {
                      "start": {
                        "line": 244,
                        "column": 25
                      },
                      "end": {
                        "line": 244,
                        "column": 28
                      }
                    }
                  },
                  "range": [
                    8729,
                    8751
                  ],
                  "loc": {
                    "start": {
                      "line": 244,
                      "column": 6
                    },
                    "end": {
                      "line": 244,
                      "column": 28
                    }
                  }
                },
                "arguments": [
                  {
                    "type": "Literal",
                    "value": "isLoading",
                    "raw": "'isLoading'",
                    "range": [
                      8752,
                      8763
                    ],
                    "loc": {
                      "start": {
                        "line": 244,
                        "column": 29
                      },
                      "end": {
                        "line": 244,
                        "column": 40
                      }
                    }
                  }
                ],
                "range": [
                  8729,
                  8764
                ],
                "loc": {
                  "start": {
                    "line": 244,
                    "column": 6
                  },
                  "end": {
                    "line": 244,
                    "column": 41
                  }
                }
              },
              "consequent": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "ReturnStatement",
                    "argument": {
                      "type": "Literal",
                      "value": null,
                      "raw": "null",
                      "range": [
                        8779,
                        8783
                      ],
                      "loc": {
                        "start": {
                          "line": 245,
                          "column": 11
                        },
                        "end": {
                          "line": 245,
                          "column": 15
                        }
                      }
                    },
                    "range": [
                      8772,
                      8786
                    ],
                    "loc": {
                      "start": {
                        "line": 245,
                        "column": 4
                      },
                      "end": {
                        "line": 246,
                        "column": 2
                      }
                    }
                  }
                ],
                "range": [
                  8766,
                  8787
                ],
                "loc": {
                  "start": {
                    "line": 244,
                    "column": 43
                  },
                  "end": {
                    "line": 246,
                    "column": 3
                  }
                }
              },
              "alternate": null,
              "range": [
                8725,
                8787
              ],
              "loc": {
                "start": {
                  "line": 244,
                  "column": 2
                },
                "end": {
                  "line": 246,
                  "column": 3
                }
              }
            },
            {
              "type": "VariableDeclaration",
              "declarations": [
                {
                  "type": "VariableDeclarator",
                  "id": {
                    "type": "Identifier",
                    "name": "typeMappedValue",
                    "range": [
                      8796,
                      8811
                    ],
                    "loc": {
                      "start": {
                        "line": 247,
                        "column": 8
                      },
                      "end": {
                        "line": 247,
                        "column": 23
                      }
                    }
                  },
                  "init": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "typeMappedReduxMap",
                        "range": [
                          8814,
                          8832
                        ],
                        "loc": {
                          "start": {
                            "line": 247,
                            "column": 26
                          },
                          "end": {
                            "line": 247,
                            "column": 44
                          }
                        }
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "getIn",
                        "range": [
                          8833,
                          8838
                        ],
                        "loc": {
                          "start": {
                            "line": 247,
                            "column": 45
                          },
                          "end": {
                            "line": 247,
                            "column": 50
                          }
                        }
                      },
                      "range": [
                        8814,
                        8838
                      ],
                      "loc": {
                        "start": {
                          "line": 247,
                          "column": 26
                        },
                        "end": {
                          "line": 247,
                          "column": 50
                        }
                      }
                    },
                    "arguments": [
                      {
                        "type": "ArrayExpression",
                        "elements": [
                          {
                            "type": "Literal",
                            "value": "data",
                            "raw": "'data'",
                            "range": [
                              8840,
                              8846
                            ],
                            "loc": {
                              "start": {
                                "line": 247,
                                "column": 52
                              },
                              "end": {
                                "line": 247,
                                "column": 58
                              }
                            }
                          },
                          {
                            "type": "Identifier",
                            "name": "typeKey",
                            "range": [
                              8848,
                              8855
                            ],
                            "loc": {
                              "start": {
                                "line": 247,
                                "column": 60
                              },
                              "end": {
                                "line": 247,
                                "column": 67
                              }
                            }
                          }
                        ],
                        "range": [
                          8839,
                          8856
                        ],
                        "loc": {
                          "start": {
                            "line": 247,
                            "column": 51
                          },
                          "end": {
                            "line": 247,
                            "column": 68
                          }
                        }
                      },
                      {
                        "type": "Literal",
                        "value": null,
                        "raw": "null",
                        "range": [
                          8858,
                          8862
                        ],
                        "loc": {
                          "start": {
                            "line": 247,
                            "column": 70
                          },
                          "end": {
                            "line": 247,
                            "column": 74
                          }
                        }
                      }
                    ],
                    "range": [
                      8814,
                      8863
                    ],
                    "loc": {
                      "start": {
                        "line": 247,
                        "column": 26
                      },
                      "end": {
                        "line": 247,
                        "column": 75
                      }
                    }
                  },
                  "range": [
                    8796,
                    8863
                  ],
                  "loc": {
                    "start": {
                      "line": 247,
                      "column": 8
                    },
                    "end": {
                      "line": 247,
                      "column": 75
                    }
                  }
                }
              ],
              "kind": "const",
              "range": [
                8790,
                8866
              ],
              "loc": {
                "start": {
                  "line": 247,
                  "column": 2
                },
                "end": {
                  "line": 248,
                  "column": 2
                }
              }
            },
            {
              "type": "IfStatement",
              "test": {
                "type": "BinaryExpression",
                "operator": "!==",
                "left": {
                  "type": "Identifier",
                  "name": "typeMappedValue",
                  "range": [
                    8870,
                    8885
                  ],
                  "loc": {
                    "start": {
                      "line": 248,
                      "column": 6
                    },
                    "end": {
                      "line": 248,
                      "column": 21
                    }
                  }
                },
                "right": {
                  "type": "Literal",
                  "value": null,
                  "raw": "null",
                  "range": [
                    8890,
                    8894
                  ],
                  "loc": {
                    "start": {
                      "line": 248,
                      "column": 26
                    },
                    "end": {
                      "line": 248,
                      "column": 30
                    }
                  }
                },
                "range": [
                  8870,
                  8894
                ],
                "loc": {
                  "start": {
                    "line": 248,
                    "column": 6
                  },
                  "end": {
                    "line": 248,
                    "column": 30
                  }
                }
              },
              "consequent": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "ReturnStatement",
                    "argument": {
                      "type": "Identifier",
                      "name": "typeMappedValue",
                      "range": [
                        8909,
                        8924
                      ],
                      "loc": {
                        "start": {
                          "line": 249,
                          "column": 11
                        },
                        "end": {
                          "line": 249,
                          "column": 26
                        }
                      }
                    },
                    "range": [
                      8902,
                      8927
                    ],
                    "loc": {
                      "start": {
                        "line": 249,
                        "column": 4
                      },
                      "end": {
                        "line": 250,
                        "column": 2
                      }
                    }
                  }
                ],
                "range": [
                  8896,
                  8928
                ],
                "loc": {
                  "start": {
                    "line": 248,
                    "column": 32
                  },
                  "end": {
                    "line": 250,
                    "column": 3
                  }
                }
              },
              "alternate": null,
              "range": [
                8866,
                8928
              ],
              "loc": {
                "start": {
                  "line": 248,
                  "column": 2
                },
                "end": {
                  "line": 250,
                  "column": 3
                }
              }
            },
            {
              "type": "IfStatement",
              "test": {
                "type": "Identifier",
                "name": "fallbackToDefault",
                "range": [
                  8935,
                  8952
                ],
                "loc": {
                  "start": {
                    "line": 251,
                    "column": 6
                  },
                  "end": {
                    "line": 251,
                    "column": 23
                  }
                }
              },
              "consequent": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "ReturnStatement",
                    "argument": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "typeMappedReduxMap",
                          "range": [
                            8967,
                            8985
                          ],
                          "loc": {
                            "start": {
                              "line": 252,
                              "column": 11
                            },
                            "end": {
                              "line": 252,
                              "column": 29
                            }
                          }
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "getIn",
                          "range": [
                            8986,
                            8991
                          ],
                          "loc": {
                            "start": {
                              "line": 252,
                              "column": 30
                            },
                            "end": {
                              "line": 252,
                              "column": 35
                            }
                          }
                        },
                        "range": [
                          8967,
                          8991
                        ],
                        "loc": {
                          "start": {
                            "line": 252,
                            "column": 11
                          },
                          "end": {
                            "line": 252,
                            "column": 35
                          }
                        }
                      },
                      "arguments": [
                        {
                          "type": "ArrayExpression",
                          "elements": [
                            {
                              "type": "Literal",
                              "value": "data",
                              "raw": "'data'",
                              "range": [
                                8993,
                                8999
                              ],
                              "loc": {
                                "start": {
                                  "line": 252,
                                  "column": 37
                                },
                                "end": {
                                  "line": 252,
                                  "column": 43
                                }
                              }
                            },
                            {
                              "type": "Identifier",
                              "name": "TYPE_MAPPED_REDUX_MAP_DEFAULT_KEY",
                              "range": [
                                9001,
                                9034
                              ],
                              "loc": {
                                "start": {
                                  "line": 252,
                                  "column": 45
                                },
                                "end": {
                                  "line": 252,
                                  "column": 78
                                }
                              }
                            }
                          ],
                          "range": [
                            8992,
                            9035
                          ],
                          "loc": {
                            "start": {
                              "line": 252,
                              "column": 36
                            },
                            "end": {
                              "line": 252,
                              "column": 79
                            }
                          }
                        }
                      ],
                      "range": [
                        8967,
                        9036
                      ],
                      "loc": {
                        "start": {
                          "line": 252,
                          "column": 11
                        },
                        "end": {
                          "line": 252,
                          "column": 80
                        }
                      }
                    },
                    "range": [
                      8960,
                      9039
                    ],
                    "loc": {
                      "start": {
                        "line": 252,
                        "column": 4
                      },
                      "end": {
                        "line": 253,
                        "column": 2
                      }
                    }
                  }
                ],
                "range": [
                  8954,
                  9040
                ],
                "loc": {
                  "start": {
                    "line": 251,
                    "column": 25
                  },
                  "end": {
                    "line": 253,
                    "column": 3
                  }
                }
              },
              "alternate": null,
              "range": [
                8931,
                9040
              ],
              "loc": {
                "start": {
                  "line": 251,
                  "column": 2
                },
                "end": {
                  "line": 253,
                  "column": 3
                }
              }
            },
            {
              "type": "ReturnStatement",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "null",
                "range": [
                  9050,
                  9054
                ],
                "loc": {
                  "start": {
                    "line": 254,
                    "column": 9
                  },
                  "end": {
                    "line": 254,
                    "column": 13
                  }
                }
              },
              "range": [
                9043,
                9055
              ],
              "loc": {
                "start": {
                  "line": 254,
                  "column": 2
                },
                "end": {
                  "line": 255,
                  "column": 0
                }
              }
            }
          ],
          "range": [
            8721,
            9056
          ],
          "loc": {
            "start": {
              "line": 243,
              "column": 104
            },
            "end": {
              "line": 255,
              "column": 1
            }
          }
        },
        "generator": false,
        "expression": false,
        "range": [
          8624,
          9056
        ],
        "loc": {
          "start": {
            "line": 243,
            "column": 7
          },
          "end": {
            "line": 255,
            "column": 1
          }
        },
        "leadingComments": [
          {
            "type": "Block",
            "value": "*\n * Used to fetch the ImmutableOrderedMap of values for a <typeKey> in a structure built by\n * {@link makeTypeMappedReduxMapFromApiData}. See its documentation for structure.\n *\n * If the given <typeKey> is not present in the map, then the entry referenced by\n * {@link TYPE_MAPPED_REDUX_MAP_DEFAULT_KEY} will be returned instead.\n *\n * @param typeMappedReduxMap a map built by {@link makeTypeMappedReduxMapFromApiData}\n * @param typeKey the <typeKey> to look for in the map\n * @param fallbackToDefault if true return default-data if no data for typekey is present. If false, return null.\n * @return {Immutable.OrderedMap<string, Immutable.Map<string, string>>} The ImmutableOrderedMap referenced by the\n *   given <typeKey>\n ",
            "range": [
              7885,
              8616
            ],
            "loc": {
              "start": {
                "line": 230,
                "column": 0
              },
              "end": {
                "line": 242,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "Block",
            "value": "*\n * Used to ensure that a map built by {@link makeTypeMappedReduxMapFromApiData} or\n * {@link makeImmutableOrderedMapFromValueArray} is loaded in redux-store\n *\n * Note that this should only be used in cases where the data is static (e.g. load once, use always), as it does\n * not pass any params to the api or check if any specific data is present. This simply triggers the given\n * action if the map is empty and not already loading.\n *\n * @param typeMap The redux-store-map you want to ensure is loaded (e.g. userNotificationTypesMap)\n * @param dispatchAction the redux-action to dispatch to load the typemap\n * @param dispatch The dispatcher to use to dispatch the dispatchAction, e.g. props.dispatch\n * @return {boolean} true if the given map is loaded, false if not.\n ",
            "range": [
              9058,
              9837
            ],
            "loc": {
              "start": {
                "line": 257,
                "column": 0
              },
              "end": {
                "line": 269,
                "column": 3
              }
            }
          }
        ]
      },
      "specifiers": [],
      "source": null,
      "range": [
        8617,
        9056
      ],
      "loc": {
        "start": {
          "line": 243,
          "column": 0
        },
        "end": {
          "line": 255,
          "column": 1
        }
      },
      "leadingComments": [
        {
          "type": "Block",
          "value": "*\n * Used to fetch the ImmutableOrderedMap of values for a <typeKey> in a structure built by\n * {@link makeTypeMappedReduxMapFromApiData}. See its documentation for structure.\n *\n * If the given <typeKey> is not present in the map, then the entry referenced by\n * {@link TYPE_MAPPED_REDUX_MAP_DEFAULT_KEY} will be returned instead.\n *\n * @param typeMappedReduxMap a map built by {@link makeTypeMappedReduxMapFromApiData}\n * @param typeKey the <typeKey> to look for in the map\n * @param fallbackToDefault if true return default-data if no data for typekey is present. If false, return null.\n * @return {Immutable.OrderedMap<string, Immutable.Map<string, string>>} The ImmutableOrderedMap referenced by the\n *   given <typeKey>\n ",
          "range": [
            7885,
            8616
          ],
          "loc": {
            "start": {
              "line": 230,
              "column": 0
            },
            "end": {
              "line": 242,
              "column": 3
            }
          }
        }
      ],
      "trailingComments": [
        {
          "type": "Block",
          "value": "*\n * Used to ensure that a map built by {@link makeTypeMappedReduxMapFromApiData} or\n * {@link makeImmutableOrderedMapFromValueArray} is loaded in redux-store\n *\n * Note that this should only be used in cases where the data is static (e.g. load once, use always), as it does\n * not pass any params to the api or check if any specific data is present. This simply triggers the given\n * action if the map is empty and not already loading.\n *\n * @param typeMap The redux-store-map you want to ensure is loaded (e.g. userNotificationTypesMap)\n * @param dispatchAction the redux-action to dispatch to load the typemap\n * @param dispatch The dispatcher to use to dispatch the dispatchAction, e.g. props.dispatch\n * @return {boolean} true if the given map is loaded, false if not.\n ",
          "range": [
            9058,
            9837
          ],
          "loc": {
            "start": {
              "line": 257,
              "column": 0
            },
            "end": {
              "line": 269,
              "column": 3
            }
          }
        }
      ]
    },
    {
      "type": "ExportNamedDeclaration",
      "declaration": {
        "type": "FunctionDeclaration",
        "id": {
          "type": "Identifier",
          "name": "ensureMapHasDataInReduxStore",
          "range": [
            9854,
            9882
          ],
          "loc": {
            "start": {
              "line": 270,
              "column": 16
            },
            "end": {
              "line": 270,
              "column": 44
            }
          }
        },
        "params": [
          {
            "type": "Identifier",
            "name": "typeMap",
            "range": [
              9884,
              9891
            ],
            "loc": {
              "start": {
                "line": 270,
                "column": 46
              },
              "end": {
                "line": 270,
                "column": 53
              }
            }
          },
          {
            "type": "Identifier",
            "name": "dispatchAction",
            "range": [
              9893,
              9907
            ],
            "loc": {
              "start": {
                "line": 270,
                "column": 55
              },
              "end": {
                "line": 270,
                "column": 69
              }
            }
          },
          {
            "type": "Identifier",
            "name": "dispatch",
            "range": [
              9909,
              9917
            ],
            "loc": {
              "start": {
                "line": 270,
                "column": 71
              },
              "end": {
                "line": 270,
                "column": 79
              }
            }
          }
        ],
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "IfStatement",
              "test": {
                "type": "BinaryExpression",
                "operator": ">",
                "left": {
                  "type": "UnaryExpression",
                  "operator": "!",
                  "argument": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "typeMap",
                          "range": [
                            9928,
                            9935
                          ],
                          "loc": {
                            "start": {
                              "line": 271,
                              "column": 7
                            },
                            "end": {
                              "line": 271,
                              "column": 14
                            }
                          }
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "get",
                          "range": [
                            9936,
                            9939
                          ],
                          "loc": {
                            "start": {
                              "line": 271,
                              "column": 15
                            },
                            "end": {
                              "line": 271,
                              "column": 18
                            }
                          }
                        },
                        "range": [
                          9928,
                          9939
                        ],
                        "loc": {
                          "start": {
                            "line": 271,
                            "column": 7
                          },
                          "end": {
                            "line": 271,
                            "column": 18
                          }
                        }
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": "data",
                          "raw": "'data'",
                          "range": [
                            9940,
                            9946
                          ],
                          "loc": {
                            "start": {
                              "line": 271,
                              "column": 19
                            },
                            "end": {
                              "line": 271,
                              "column": 25
                            }
                          }
                        }
                      ],
                      "range": [
                        9928,
                        9947
                      ],
                      "loc": {
                        "start": {
                          "line": 271,
                          "column": 7
                        },
                        "end": {
                          "line": 271,
                          "column": 26
                        }
                      }
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "size",
                      "range": [
                        9948,
                        9952
                      ],
                      "loc": {
                        "start": {
                          "line": 271,
                          "column": 27
                        },
                        "end": {
                          "line": 271,
                          "column": 31
                        }
                      }
                    },
                    "range": [
                      9928,
                      9952
                    ],
                    "loc": {
                      "start": {
                        "line": 271,
                        "column": 7
                      },
                      "end": {
                        "line": 271,
                        "column": 31
                      }
                    }
                  },
                  "prefix": true,
                  "range": [
                    9927,
                    9952
                  ],
                  "loc": {
                    "start": {
                      "line": 271,
                      "column": 6
                    },
                    "end": {
                      "line": 271,
                      "column": 31
                    }
                  }
                },
                "right": {
                  "type": "Literal",
                  "value": 0,
                  "raw": "0",
                  "range": [
                    9955,
                    9956
                  ],
                  "loc": {
                    "start": {
                      "line": 271,
                      "column": 34
                    },
                    "end": {
                      "line": 271,
                      "column": 35
                    }
                  }
                },
                "range": [
                  9927,
                  9956
                ],
                "loc": {
                  "start": {
                    "line": 271,
                    "column": 6
                  },
                  "end": {
                    "line": 271,
                    "column": 35
                  }
                }
              },
              "consequent": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "IfStatement",
                    "test": {
                      "type": "UnaryExpression",
                      "operator": "!",
                      "argument": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "typeMap",
                            "range": [
                              9969,
                              9976
                            ],
                            "loc": {
                              "start": {
                                "line": 272,
                                "column": 9
                              },
                              "end": {
                                "line": 272,
                                "column": 16
                              }
                            }
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "get",
                            "range": [
                              9977,
                              9980
                            ],
                            "loc": {
                              "start": {
                                "line": 272,
                                "column": 17
                              },
                              "end": {
                                "line": 272,
                                "column": 20
                              }
                            }
                          },
                          "range": [
                            9969,
                            9980
                          ],
                          "loc": {
                            "start": {
                              "line": 272,
                              "column": 9
                            },
                            "end": {
                              "line": 272,
                              "column": 20
                            }
                          }
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "isLoading",
                            "raw": "'isLoading'",
                            "range": [
                              9981,
                              9992
                            ],
                            "loc": {
                              "start": {
                                "line": 272,
                                "column": 21
                              },
                              "end": {
                                "line": 272,
                                "column": 32
                              }
                            }
                          },
                          {
                            "type": "Literal",
                            "value": false,
                            "raw": "false",
                            "range": [
                              9994,
                              9999
                            ],
                            "loc": {
                              "start": {
                                "line": 272,
                                "column": 34
                              },
                              "end": {
                                "line": 272,
                                "column": 39
                              }
                            }
                          }
                        ],
                        "range": [
                          9969,
                          10000
                        ],
                        "loc": {
                          "start": {
                            "line": 272,
                            "column": 9
                          },
                          "end": {
                            "line": 272,
                            "column": 40
                          }
                        }
                      },
                      "prefix": true,
                      "range": [
                        9968,
                        10000
                      ],
                      "loc": {
                        "start": {
                          "line": 272,
                          "column": 8
                        },
                        "end": {
                          "line": 272,
                          "column": 40
                        }
                      }
                    },
                    "consequent": {
                      "type": "BlockStatement",
                      "body": [
                        {
                          "type": "ExpressionStatement",
                          "expression": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "Identifier",
                              "name": "dispatch",
                              "range": [
                                10010,
                                10018
                              ],
                              "loc": {
                                "start": {
                                  "line": 273,
                                  "column": 6
                                },
                                "end": {
                                  "line": 273,
                                  "column": 14
                                }
                              }
                            },
                            "arguments": [
                              {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "Identifier",
                                  "name": "dispatchAction",
                                  "range": [
                                    10019,
                                    10033
                                  ],
                                  "loc": {
                                    "start": {
                                      "line": 273,
                                      "column": 15
                                    },
                                    "end": {
                                      "line": 273,
                                      "column": 29
                                    }
                                  }
                                },
                                "arguments": [],
                                "range": [
                                  10019,
                                  10035
                                ],
                                "loc": {
                                  "start": {
                                    "line": 273,
                                    "column": 15
                                  },
                                  "end": {
                                    "line": 273,
                                    "column": 31
                                  }
                                }
                              }
                            ],
                            "range": [
                              10010,
                              10036
                            ],
                            "loc": {
                              "start": {
                                "line": 273,
                                "column": 6
                              },
                              "end": {
                                "line": 273,
                                "column": 32
                              }
                            }
                          },
                          "range": [
                            10010,
                            10041
                          ],
                          "loc": {
                            "start": {
                              "line": 273,
                              "column": 6
                            },
                            "end": {
                              "line": 274,
                              "column": 4
                            }
                          }
                        }
                      ],
                      "range": [
                        10002,
                        10042
                      ],
                      "loc": {
                        "start": {
                          "line": 272,
                          "column": 42
                        },
                        "end": {
                          "line": 274,
                          "column": 5
                        }
                      }
                    },
                    "alternate": null,
                    "range": [
                      9964,
                      10042
                    ],
                    "loc": {
                      "start": {
                        "line": 272,
                        "column": 4
                      },
                      "end": {
                        "line": 274,
                        "column": 5
                      }
                    }
                  },
                  {
                    "type": "ReturnStatement",
                    "argument": {
                      "type": "Literal",
                      "value": false,
                      "raw": "false",
                      "range": [
                        10054,
                        10059
                      ],
                      "loc": {
                        "start": {
                          "line": 275,
                          "column": 11
                        },
                        "end": {
                          "line": 275,
                          "column": 16
                        }
                      }
                    },
                    "range": [
                      10047,
                      10062
                    ],
                    "loc": {
                      "start": {
                        "line": 275,
                        "column": 4
                      },
                      "end": {
                        "line": 276,
                        "column": 2
                      }
                    }
                  }
                ],
                "range": [
                  9958,
                  10063
                ],
                "loc": {
                  "start": {
                    "line": 271,
                    "column": 37
                  },
                  "end": {
                    "line": 276,
                    "column": 3
                  }
                }
              },
              "alternate": null,
              "range": [
                9923,
                10063
              ],
              "loc": {
                "start": {
                  "line": 271,
                  "column": 2
                },
                "end": {
                  "line": 276,
                  "column": 3
                }
              }
            },
            {
              "type": "ReturnStatement",
              "argument": {
                "type": "Literal",
                "value": true,
                "raw": "true",
                "range": [
                  10073,
                  10077
                ],
                "loc": {
                  "start": {
                    "line": 277,
                    "column": 9
                  },
                  "end": {
                    "line": 277,
                    "column": 13
                  }
                }
              },
              "range": [
                10066,
                10078
              ],
              "loc": {
                "start": {
                  "line": 277,
                  "column": 2
                },
                "end": {
                  "line": 278,
                  "column": 0
                }
              }
            }
          ],
          "range": [
            9919,
            10079
          ],
          "loc": {
            "start": {
              "line": 270,
              "column": 81
            },
            "end": {
              "line": 278,
              "column": 1
            }
          }
        },
        "generator": false,
        "expression": false,
        "range": [
          9845,
          10079
        ],
        "loc": {
          "start": {
            "line": 270,
            "column": 7
          },
          "end": {
            "line": 278,
            "column": 1
          }
        },
        "leadingComments": [
          {
            "type": "Block",
            "value": "*\n * Used to ensure that a map built by {@link makeTypeMappedReduxMapFromApiData} or\n * {@link makeImmutableOrderedMapFromValueArray} is loaded in redux-store\n *\n * Note that this should only be used in cases where the data is static (e.g. load once, use always), as it does\n * not pass any params to the api or check if any specific data is present. This simply triggers the given\n * action if the map is empty and not already loading.\n *\n * @param typeMap The redux-store-map you want to ensure is loaded (e.g. userNotificationTypesMap)\n * @param dispatchAction the redux-action to dispatch to load the typemap\n * @param dispatch The dispatcher to use to dispatch the dispatchAction, e.g. props.dispatch\n * @return {boolean} true if the given map is loaded, false if not.\n ",
            "range": [
              9058,
              9837
            ],
            "loc": {
              "start": {
                "line": 257,
                "column": 0
              },
              "end": {
                "line": 269,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": []
      },
      "specifiers": [],
      "source": null,
      "range": [
        9838,
        10079
      ],
      "loc": {
        "start": {
          "line": 270,
          "column": 0
        },
        "end": {
          "line": 278,
          "column": 1
        }
      },
      "leadingComments": [
        {
          "type": "Block",
          "value": "*\n * Used to ensure that a map built by {@link makeTypeMappedReduxMapFromApiData} or\n * {@link makeImmutableOrderedMapFromValueArray} is loaded in redux-store\n *\n * Note that this should only be used in cases where the data is static (e.g. load once, use always), as it does\n * not pass any params to the api or check if any specific data is present. This simply triggers the given\n * action if the map is empty and not already loading.\n *\n * @param typeMap The redux-store-map you want to ensure is loaded (e.g. userNotificationTypesMap)\n * @param dispatchAction the redux-action to dispatch to load the typemap\n * @param dispatch The dispatcher to use to dispatch the dispatchAction, e.g. props.dispatch\n * @return {boolean} true if the given map is loaded, false if not.\n ",
          "range": [
            9058,
            9837
          ],
          "loc": {
            "start": {
              "line": 257,
              "column": 0
            },
            "end": {
              "line": 269,
              "column": 3
            }
          }
        }
      ]
    }
  ],
  "sourceType": "module",
  "range": [
    0,
    10079
  ],
  "loc": {
    "start": {
      "line": 1,
      "column": 0
    },
    "end": {
      "line": 278,
      "column": 1
    }
  },
  "comments": [
    {
      "type": "Block",
      "value": "*\n * Util used by all `action.js`-files in `redux/api/*`.\n * This is used to mark an entry in a redux-map as loading.\n *\n * sets `isLoading` to `true` and `apiError` to null.\n *\n * @param oldApiDataMap Previous contents of `data` in the redux-map in question\n * @return {Immutable.Map<string, any>} The new Map to insert as entry in the redux-map being updated.\n ",
      "range": [
        265,
        632
      ],
      "loc": {
        "start": {
          "line": 6,
          "column": 0
        },
        "end": {
          "line": 14,
          "column": 3
        }
      }
    },
    {
      "type": "Block",
      "value": "*\n * Util used by all `action.js`-files in `redux/api/*`.\n * This is used to format data to store in redux-state-map when an api-call is successful.\n *\n * The given `newData` is inserted as an ImmutableMap `data`.\n *\n * sets `isLoading` to `false`, `apiError` to null and `timestamp` to now.\n *\n * @param newData {Object} the object returned from the api which should be formated for insertion in the\n *   redux-state-map. If fromList is true this should be an iterable.\n * @param fromList {boolean} if true, make an ImmutableList of the given data instead of ImmutableMap\n * @param noWrap {boolean} if true, newData will not be wrapped in ImmutableMap or ImmutableList. Only use this if the\n *   data you are setting is already an ImmutableMap or ImmutableList!\n * @return {Immutable.Map} newly formatted ImmutableMap ready to be placed in redux-state-map\n ",
      "range": [
        879,
        1741
      ],
      "loc": {
        "start": {
          "line": 24,
          "column": 0
        },
        "end": {
          "line": 38,
          "column": 3
        }
      }
    },
    {
      "type": "Block",
      "value": "*\n * Util used by all `action.js`-files in `redux/api/*`.\n *\n * This is used to build a common error-format for all redux-map-entries.\n * sets `isLoading` to `false`, `data` to `null`, `timestamp` to now.\n *\n * stores the error in the field `apiError` formatted like this:\n *\n * apiError: ImmutableMap({\n *  status: error.response.status,\n *  bodydata: ImmutableMap(error.response.bodydata)\n * })\n *\n * @param error\n * @return {Immutable.Map}\n ",
      "range": [
        2152,
        2600
      ],
      "loc": {
        "start": {
          "line": 59,
          "column": 0
        },
        "end": {
          "line": 74,
          "column": 3
        }
      }
    },
    {
      "type": "Block",
      "value": "*\n * Used to mark an object in redux-state as deleted.\n * @param oldData\n * @return {Immutable.Map}\n ",
      "range": [
        2965,
        3070
      ],
      "loc": {
        "start": {
          "line": 89,
          "column": 0
        },
        "end": {
          "line": 93,
          "column": 3
        }
      }
    },
    {
      "type": "Block",
      "value": "*\n * Simple util to fetch data from a redux-api-map (which should always be built by {@link makeApiDataMapIsLoading},\n * {@link makeApiDataMapNewData} or {@link makeApiDataMapError}).\n *\n * This util will lookup the given id in the given map and return it if it exists.\n * If the entry is missing or loading, null is returned.\n * If the entry is missing (and not already loading), the given `dispatchAction` is dispatched and null is returned.\n *\n * Note that this util will still return the object even if it is an error-object (`apiError !== null`), so you need\n * to handle errors in your component.\n *\n * @param map {Immutable.Map} a map built by {@link makeApiDataMapIsLoading}, {@link makeApiDataMapNewData} or\n *   {@link makeApiDataMapError}\n * @param id {number} the entry-id to look for in the map\n * @param dispatchAction {function} the `redux.api...actions.<action>` to dispatch to load the entry if missing\n * @param dispatch {function} a `redux-thunk` dispatch, like `this.props.dispatch` from a connected React.Component.\n * @return {null|Immutable.Map} null if the entry is loading, or an ImmutableMap of the entry if it exists.\n ",
      "range": [
        3296,
        4446
      ],
      "loc": {
        "start": {
          "line": 105,
          "column": 0
        },
        "end": {
          "line": 122,
          "column": 3
        }
      }
    },
    {
      "type": "Block",
      "value": "*\n * Used for the internal OrderedMap from {@link makeTypeMappedReduxMapFromApiData}, and should be used for other\n * type-lists from api.\n *\n * The only required fieldname on the api-data is `value`, which will be used as key in the ImmutableOrderedMap\n *\n * Builds a structure like this:\n *   ImmutableOrderedMap({\n *     <valueKey>: ImmutableMap({\n *       label: <some label>,\n *       description: <some description>,\n *       <otherfield>: <otherfieldkey>,\n *         ...\n *     })\n *   })\n *\n * from input-data formatted like this:\n *   [\n *     {\n *       \"value\": \"<valueKey>\",\n *       \"label\": \"<some label>\",\n *       \"description\": \"<some description>\",\n *       <otherfield>: <otherfieldkey>,\n *       ...\n *     }\n *   ]\n *\n * @param valueArray See input-data doc above\n * @param valueKey default to 'value' as in example above. can be set to any valid value. note that this is NOT\n *   validated or enforced in any way\n * @return {Immutable.OrderedMap<string, Immutable.Map<string, string>>} see example above\n ",
      "range": [
        4850,
        5881
      ],
      "loc": {
        "start": {
          "line": 138,
          "column": 0
        },
        "end": {
          "line": 169,
          "column": 3
        }
      }
    },
    {
      "type": "Line",
      "value": " const {value, ...object} = valueObject",
      "range": [
        6110,
        6151
      ],
      "loc": {
        "start": {
          "line": 174,
          "column": 8
        },
        "end": {
          "line": 174,
          "column": 49
        }
      }
    },
    {
      "type": "Line",
      "value": " newValuesForNodeTypeMap.set(value, new ImmutableMap(object))",
      "range": [
        6160,
        6223
      ],
      "loc": {
        "start": {
          "line": 175,
          "column": 8
        },
        "end": {
          "line": 175,
          "column": 71
        }
      }
    },
    {
      "type": "Block",
      "value": "*\n * Used for apis like nodePaymentSubscriptionTypes and nodeMembershipTypes.\n *\n * Builds a structure like this:\n * ImmutableMap({\n *  <nodeType>: ImmutableOrderedMap({\n *     <valueKey>: ImmutableMap({\n *       label: <some label>,\n *       description: <some description>,\n *       <otherfield>: <otherfieldkey>,\n *         ...\n *     })\n *   })\n * })\n *\n * Expects apiResponseBodydata to be formatted like this:\n *  {\n *     \"<nodeType>\": [\n *       {\n *         \"value\": \"<valueKey>\",\n *         \"label\": \"<some label>\",\n *         \"description\": \"<some description>\",\n *         <otherfield>: <otherfieldkey>,\n *         ...\n *       }\n *     ]\n *  }\n *\n * @param apiResponseBodydata `bodydata` from a response. This response has to be formatted correctly.\n * @return {Immutable.Map<string, Immutable.OrderedMap<string, Immutable.Map<string, string>>>} See example in doc above\n ",
      "range": [
        6397,
        7286
      ],
      "loc": {
        "start": {
          "line": 183,
          "column": 0
        },
        "end": {
          "line": 213,
          "column": 3
        }
      }
    },
    {
      "type": "Block",
      "value": "*\n * The default key for maps built by {@link makeTypeMappedReduxMapFromApiData}.\n * This should be the same key used by the server-side apis, so do not change it unless you know what you are doing.\n *\n * @type {string}\n ",
      "range": [
        7595,
        7820
      ],
      "loc": {
        "start": {
          "line": 222,
          "column": 0
        },
        "end": {
          "line": 227,
          "column": 3
        }
      }
    },
    {
      "type": "Block",
      "value": "*\n * Used to fetch the ImmutableOrderedMap of values for a <typeKey> in a structure built by\n * {@link makeTypeMappedReduxMapFromApiData}. See its documentation for structure.\n *\n * If the given <typeKey> is not present in the map, then the entry referenced by\n * {@link TYPE_MAPPED_REDUX_MAP_DEFAULT_KEY} will be returned instead.\n *\n * @param typeMappedReduxMap a map built by {@link makeTypeMappedReduxMapFromApiData}\n * @param typeKey the <typeKey> to look for in the map\n * @param fallbackToDefault if true return default-data if no data for typekey is present. If false, return null.\n * @return {Immutable.OrderedMap<string, Immutable.Map<string, string>>} The ImmutableOrderedMap referenced by the\n *   given <typeKey>\n ",
      "range": [
        7885,
        8616
      ],
      "loc": {
        "start": {
          "line": 230,
          "column": 0
        },
        "end": {
          "line": 242,
          "column": 3
        }
      }
    },
    {
      "type": "Block",
      "value": "*\n * Used to ensure that a map built by {@link makeTypeMappedReduxMapFromApiData} or\n * {@link makeImmutableOrderedMapFromValueArray} is loaded in redux-store\n *\n * Note that this should only be used in cases where the data is static (e.g. load once, use always), as it does\n * not pass any params to the api or check if any specific data is present. This simply triggers the given\n * action if the map is empty and not already loading.\n *\n * @param typeMap The redux-store-map you want to ensure is loaded (e.g. userNotificationTypesMap)\n * @param dispatchAction the redux-action to dispatch to load the typemap\n * @param dispatch The dispatcher to use to dispatch the dispatchAction, e.g. props.dispatch\n * @return {boolean} true if the given map is loaded, false if not.\n ",
      "range": [
        9058,
        9837
      ],
      "loc": {
        "start": {
          "line": 257,
          "column": 0
        },
        "end": {
          "line": 269,
          "column": 3
        }
      }
    }
  ]
}